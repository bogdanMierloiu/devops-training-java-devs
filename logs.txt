* 
* ==> Audit <==
* |------------|-------------------------------------------------|----------|------------------------|---------|----------------------|----------------------|
|  Command   |                      Args                       | Profile  |          User          | Version |      Start Time      |       End Time       |
|------------|-------------------------------------------------|----------|------------------------|---------|----------------------|----------------------|
| addons     | list                                            | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 09:47 EEST | 13 Apr 24 09:47 EEST |
| image      | load spring-container-1:latest                  | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 09:53 EEST |                      |
| ssh        |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 09:53 EEST |                      |
| docker-env |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 09:56 EEST | 13 Apr 24 09:56 EEST |
| docker-env | minikube docker-env                             | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 09:56 EEST | 13 Apr 24 09:56 EEST |
| docker-env |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 09:57 EEST | 13 Apr 24 09:57 EEST |
| image      | ls --format table                               | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 09:57 EEST | 13 Apr 24 09:57 EEST |
| image      | ls --format table                               | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 09:58 EEST | 13 Apr 24 09:58 EEST |
| image      | load spring-container-1                         | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:00 EEST |                      |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:01 EEST | 13 Apr 24 10:01 EEST |
| image      | load                                            | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:01 EEST |                      |
|            | docker.io/library/spring-container-1:latest     |          |                        |         |                      |                      |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:04 EEST | 13 Apr 24 10:04 EEST |
| start      |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:08 EEST | 13 Apr 24 10:09 EEST |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:10 EEST | 13 Apr 24 10:10 EEST |
| service    | nginx-service --url                             | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:13 EEST | 13 Apr 24 10:13 EEST |
| config     | set vm-driver virtualbox                        | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:15 EEST | 13 Apr 24 10:15 EEST |
| start      |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:15 EEST |                      |
| delete     |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:16 EEST | 13 Apr 24 10:16 EEST |
| start      |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:16 EEST |                      |
| config     | set vm-driver virtualbox                        | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:16 EEST | 13 Apr 24 10:16 EEST |
| delete     |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:17 EEST | 13 Apr 24 10:17 EEST |
| start      |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:17 EEST |                      |
| config     | use-context minikube                            | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:17 EEST | 13 Apr 24 10:17 EEST |
| start      |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:18 EEST |                      |
| delete     |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:18 EEST | 13 Apr 24 10:18 EEST |
| start      |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:18 EEST |                      |
| start      |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:19 EEST |                      |
| config     | set vm-driver hyperv                            | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:20 EEST | 13 Apr 24 10:20 EEST |
| start      |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:20 EEST |                      |
| delete     |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:20 EEST | 13 Apr 24 10:20 EEST |
| start      |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:20 EEST |                      |
| delete     |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:27 EEST |                      |
| config     | set vm-driver docker                            | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:28 EEST | 13 Apr 24 10:28 EEST |
| start      |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:28 EEST |                      |
| delete     |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:29 EEST | 13 Apr 24 10:29 EEST |
| start      |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:29 EEST | 13 Apr 24 10:30 EEST |
| docker-env | -u                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:46 EEST | 13 Apr 24 10:46 EEST |
| docker-env | -u                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:46 EEST | 13 Apr 24 10:46 EEST |
| docker-env | -u                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:46 EEST | 13 Apr 24 10:46 EEST |
| start      |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 10:54 EEST | 13 Apr 24 17:14 EEST |
| docker-env |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:34 EEST | 13 Apr 24 17:34 EEST |
| docker-env |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:36 EEST | 13 Apr 24 17:36 EEST |
| docker-env | minikube docker-env --shell                     | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:38 EEST | 13 Apr 24 17:38 EEST |
|            | powershell                                      |          |                        |         |                      |                      |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:39 EEST | 13 Apr 24 17:39 EEST |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:39 EEST | 13 Apr 24 17:39 EEST |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:40 EEST | 13 Apr 24 17:40 EEST |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:44 EEST | 13 Apr 24 17:44 EEST |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:46 EEST | 13 Apr 24 17:46 EEST |
| image      | rm                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:47 EEST | 13 Apr 24 17:47 EEST |
|            | docker.io/library/first-spring-container:latest |          |                        |         |                      |                      |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:47 EEST | 13 Apr 24 17:47 EEST |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:47 EEST | 13 Apr 24 17:47 EEST |
| image      | rm                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:47 EEST | 13 Apr 24 17:47 EEST |
|            | docker.io/library/first-spring-container:latest |          |                        |         |                      |                      |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:48 EEST | 13 Apr 24 17:48 EEST |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:49 EEST | 13 Apr 24 17:49 EEST |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:51 EEST | 13 Apr 24 17:51 EEST |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:57 EEST | 13 Apr 24 17:57 EEST |
| image      | ls                                              | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:58 EEST | 13 Apr 24 17:58 EEST |
| docker-env | minikube docker-env --shell                     | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:59 EEST | 13 Apr 24 17:59 EEST |
|            | powershell -u                                   |          |                        |         |                      |                      |
| docker-env |                                                 | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 17:59 EEST | 13 Apr 24 17:59 EEST |
| image      | load first-spring-container                     | minikube | ACCESA\bogdan.mierloiu | v1.32.0 | 13 Apr 24 18:01 EEST |                      |
|------------|-------------------------------------------------|----------|------------------------|---------|----------------------|----------------------|

* 
* ==> Last Start <==
* Log file created at: 2024/04/13 10:54:00
Running on machine: L-2ZXLFK3
Binary: Built with gc go1.21.3 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0413 10:54:00.702423   44004 out.go:296] Setting OutFile to fd 84 ...
I0413 10:54:00.702423   44004 out.go:343] TERM=,COLORTERM=, which probably does not support color
I0413 10:54:00.702423   44004 out.go:309] Setting ErrFile to fd 88...
I0413 10:54:00.702423   44004 out.go:343] TERM=,COLORTERM=, which probably does not support color
I0413 10:54:00.888338   44004 out.go:303] Setting JSON to false
I0413 10:54:00.897296   44004 start.go:128] hostinfo: {"hostname":"L-2ZXLFK3","uptime":530483,"bootTime":1712464356,"procs":490,"os":"windows","platform":"Microsoft Windows 10 Enterprise","platformFamily":"Standalone Workstation","platformVersion":"10.0.19045.4170 Build 19045.4170","kernelVersion":"10.0.19045.4170 Build 19045.4170","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"35071237-5e07-45c4-918b-aa96b266b494"}
W0413 10:54:00.897296   44004 start.go:136] gopshost.Virtualization returned error: not implemented yet
I0413 10:54:00.900441   44004 out.go:177] * minikube v1.32.0 on Microsoft Windows 10 Enterprise 10.0.19045.4170 Build 19045.4170
I0413 10:54:00.904183   44004 notify.go:220] Checking for updates...
I0413 10:54:00.912666   44004 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0413 10:54:00.921711   44004 driver.go:378] Setting default libvirt URI to qemu:///system
I0413 10:54:01.075869   44004 docker.go:122] docker version: linux-25.0.3:Docker Desktop 4.28.0 (139021)
I0413 10:54:01.084143   44004 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0413 10:54:04.217959   44004 cli_runner.go:217] Completed: docker system info --format "{{json .}}": (3.1338166s)
I0413 10:54:04.217959   44004 info.go:266] docker info: {ID:0b82f7f3-41cc-4c72-b72c-0978c5c0e217 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:0 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:47 OomKillDisable:true NGoroutines:79 SystemTime:2024-04-13 07:54:04.17572755 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:16 KernelVersion:5.15.146.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:16 MemTotal:16628744192 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:25.0.3 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:ae07eda36dd25f8a1b98dfbf587313b99c0190bb Expected:ae07eda36dd25f8a1b98dfbf587313b99c0190bb} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.12.1-desktop.4] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.24.6-desktop.1] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container. Vendor:Docker Inc. Version:0.0.24] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.22] map[Name:feedback Path:C:\Program Files\Docker\cli-plugins\docker-feedback.exe SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.4] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.0.1] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.5.0]] Warnings:<nil>}}
I0413 10:54:04.220662   44004 out.go:177] * Using the docker driver based on existing profile
I0413 10:54:04.224555   44004 start.go:298] selected driver: docker
I0413 10:54:04.224555   44004 start.go:902] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:8100 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\bogdan.mierloiu:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0413 10:54:04.224555   44004 start.go:913] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0413 10:54:04.241488   44004 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0413 10:54:04.542542   44004 info.go:266] docker info: {ID:0b82f7f3-41cc-4c72-b72c-0978c5c0e217 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:0 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:47 OomKillDisable:true NGoroutines:79 SystemTime:2024-04-13 07:54:04.506189944 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:16 KernelVersion:5.15.146.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:16 MemTotal:16628744192 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:25.0.3 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:ae07eda36dd25f8a1b98dfbf587313b99c0190bb Expected:ae07eda36dd25f8a1b98dfbf587313b99c0190bb} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.12.1-desktop.4] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.24.6-desktop.1] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container. Vendor:Docker Inc. Version:0.0.24] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.22] map[Name:feedback Path:C:\Program Files\Docker\cli-plugins\docker-feedback.exe SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.4] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.0.1] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.5.0]] Warnings:<nil>}}
I0413 10:54:04.571242   44004 cni.go:84] Creating CNI manager for ""
I0413 10:54:04.571242   44004 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0413 10:54:04.571242   44004 start_flags.go:323] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:8100 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\bogdan.mierloiu:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0413 10:54:04.573454   44004 out.go:177] * Starting control plane node minikube in cluster minikube
I0413 10:54:04.577762   44004 cache.go:121] Beginning downloading kic base image for docker with docker
I0413 10:54:04.579859   44004 out.go:177] * Pulling base image ...
I0413 10:54:04.583134   44004 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0413 10:54:04.583134   44004 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local docker daemon
I0413 10:54:04.583660   44004 preload.go:148] Found local preload: C:\Users\bogdan.mierloiu\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4
I0413 10:54:04.583660   44004 cache.go:56] Caching tarball of preloaded images
I0413 10:54:04.583660   44004 preload.go:174] Found C:\Users\bogdan.mierloiu\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0413 10:54:04.584172   44004 cache.go:59] Finished verifying existence of preloaded tar for  v1.28.3 on docker
I0413 10:54:04.584193   44004 profile.go:148] Saving config to C:\Users\bogdan.mierloiu\.minikube\profiles\minikube\config.json ...
I0413 10:54:04.727454   44004 cache.go:149] Downloading gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 to local cache
I0413 10:54:04.727454   44004 localpath.go:146] windows sanitize: C:\Users\bogdan.mierloiu\.minikube\cache\kic\amd64\kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0.tar -> C:\Users\bogdan.mierloiu\.minikube\cache\kic\amd64\kicbase_v0.0.42@sha256_d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0.tar
I0413 10:54:04.727973   44004 localpath.go:146] windows sanitize: C:\Users\bogdan.mierloiu\.minikube\cache\kic\amd64\kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0.tar -> C:\Users\bogdan.mierloiu\.minikube\cache\kic\amd64\kicbase_v0.0.42@sha256_d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0.tar
I0413 10:54:04.727973   44004 image.go:63] Checking for gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local cache directory
I0413 10:54:04.727973   44004 image.go:66] Found gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local cache directory, skipping pull
I0413 10:54:04.727973   44004 image.go:105] gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 exists in cache, skipping pull
I0413 10:54:04.727973   44004 cache.go:152] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 as a tarball
I0413 10:54:04.727973   44004 cache.go:162] Loading gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 from local cache
I0413 10:54:04.727973   44004 localpath.go:146] windows sanitize: C:\Users\bogdan.mierloiu\.minikube\cache\kic\amd64\kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0.tar -> C:\Users\bogdan.mierloiu\.minikube\cache\kic\amd64\kicbase_v0.0.42@sha256_d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0.tar
I0413 10:54:28.219169   44004 cache.go:164] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 from cached tarball
I0413 10:54:28.219169   44004 cache.go:194] Successfully downloaded all kic artifacts
I0413 10:54:28.219681   44004 start.go:365] acquiring machines lock for minikube: {Name:mk858f4d7adbcc3e1d043dc149016430a20a650d Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0413 10:54:28.219681   44004 start.go:369] acquired machines lock for "minikube" in 0s
I0413 10:54:28.219681   44004 start.go:96] Skipping create...Using existing machine configuration
I0413 10:54:28.219681   44004 fix.go:54] fixHost starting: 
I0413 10:54:28.235480   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:54:28.388164   44004 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0413 10:54:28.388164   44004 fix.go:102] recreateIfNeeded on minikube: state= err=unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:28.388164   44004 fix.go:107] machineExists: false. err=machine does not exist
I0413 10:54:28.392200   44004 out.go:177] * docker "minikube" container is missing, will recreate.
I0413 10:54:28.394677   44004 delete.go:124] DEMOLISHING minikube ...
I0413 10:54:28.410098   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:54:28.557352   44004 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
W0413 10:54:28.557352   44004 stop.go:75] unable to get state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:28.557352   44004 delete.go:128] stophost failed (probably ok): ssh power off: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:28.573241   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:54:28.711989   44004 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0413 10:54:28.711989   44004 delete.go:82] Unable to get host status for minikube, assuming it has already been deleted: state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:28.720740   44004 cli_runner.go:164] Run: docker container inspect -f {{.Id}} minikube
W0413 10:54:28.881271   44004 cli_runner.go:211] docker container inspect -f {{.Id}} minikube returned with exit code 1
I0413 10:54:28.881271   44004 kic.go:371] could not find the container minikube to remove it. will try anyways
I0413 10:54:28.895079   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:54:29.049924   44004 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
W0413 10:54:29.049924   44004 oci.go:84] error getting container status, will try to delete anyways: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:29.059037   44004 cli_runner.go:164] Run: docker exec --privileged -t minikube /bin/bash -c "sudo init 0"
W0413 10:54:29.218714   44004 cli_runner.go:211] docker exec --privileged -t minikube /bin/bash -c "sudo init 0" returned with exit code 1
I0413 10:54:29.218714   44004 oci.go:650] error shutdown minikube: docker exec --privileged -t minikube /bin/bash -c "sudo init 0": exit status 1
stdout:

stderr:
Error response from daemon: No such container: minikube
I0413 10:54:30.236475   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:54:30.379418   44004 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0413 10:54:30.379418   44004 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:30.379418   44004 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0413 10:54:30.379418   44004 retry.go:31] will retry after 591.2305ms: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:30.994775   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:54:31.139508   44004 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0413 10:54:31.139508   44004 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:31.139508   44004 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0413 10:54:31.139508   44004 retry.go:31] will retry after 511.267766ms: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:31.668078   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:54:31.813054   44004 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0413 10:54:31.813054   44004 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:31.813054   44004 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0413 10:54:31.813054   44004 retry.go:31] will retry after 1.115265346s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:32.940603   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:54:33.070990   44004 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0413 10:54:33.070990   44004 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:33.070990   44004 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0413 10:54:33.070990   44004 retry.go:31] will retry after 1.753003566s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:34.844472   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:54:34.985667   44004 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0413 10:54:34.985765   44004 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:34.985765   44004 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0413 10:54:34.985765   44004 retry.go:31] will retry after 2.553028292s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:37.557181   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:54:37.687531   44004 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0413 10:54:37.687531   44004 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:37.687531   44004 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0413 10:54:37.687531   44004 retry.go:31] will retry after 2.145835486s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:39.843954   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:54:39.989132   44004 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0413 10:54:39.989132   44004 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:39.989132   44004 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0413 10:54:39.989132   44004 retry.go:31] will retry after 6.331357401s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:46.345558   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:54:46.581558   44004 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0413 10:54:46.581558   44004 oci.go:662] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0413 10:54:46.581558   44004 oci.go:664] temporary error: container minikube status is  but expect it to be exited
I0413 10:54:46.581558   44004 oci.go:88] couldn't shut down minikube (might be okay): verify shutdown: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
 
I0413 10:54:46.603557   44004 cli_runner.go:164] Run: docker rm -f -v minikube
I0413 10:54:46.840287   44004 cli_runner.go:164] Run: docker container inspect -f {{.Id}} minikube
W0413 10:54:47.067938   44004 cli_runner.go:211] docker container inspect -f {{.Id}} minikube returned with exit code 1
I0413 10:54:47.087939   44004 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0413 10:54:47.343394   44004 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0413 10:54:47.360393   44004 network_create.go:281] running [docker network inspect minikube] to gather additional debugging logs...
I0413 10:54:47.360393   44004 cli_runner.go:164] Run: docker network inspect minikube
W0413 10:54:47.604394   44004 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0413 10:54:47.604394   44004 network_create.go:284] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0413 10:54:47.604394   44004 network_create.go:286] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0413 10:54:47.607394   44004 fix.go:114] Sleeping 1 second for extra luck!
I0413 10:54:48.612277   44004 start.go:125] createHost starting for "" (driver="docker")
I0413 10:54:48.615276   44004 out.go:204] * Creating docker container (CPUs=2, Memory=8100MB) ...
I0413 10:54:48.616277   44004 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0413 10:54:48.616277   44004 client.go:168] LocalClient.Create starting
I0413 10:54:48.616277   44004 main.go:141] libmachine: Reading certificate data from C:\Users\bogdan.mierloiu\.minikube\certs\ca.pem
I0413 10:54:48.617276   44004 main.go:141] libmachine: Decoding PEM data...
I0413 10:54:48.617276   44004 main.go:141] libmachine: Parsing certificate...
I0413 10:54:48.617276   44004 main.go:141] libmachine: Reading certificate data from C:\Users\bogdan.mierloiu\.minikube\certs\cert.pem
I0413 10:54:48.617276   44004 main.go:141] libmachine: Decoding PEM data...
I0413 10:54:48.617276   44004 main.go:141] libmachine: Parsing certificate...
I0413 10:54:48.634277   44004 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0413 10:54:48.826277   44004 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0413 10:54:48.842277   44004 network_create.go:281] running [docker network inspect minikube] to gather additional debugging logs...
I0413 10:54:48.842277   44004 cli_runner.go:164] Run: docker network inspect minikube
W0413 10:54:49.082278   44004 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0413 10:54:49.082278   44004 network_create.go:284] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0413 10:54:49.082278   44004 network_create.go:286] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0413 10:54:49.099277   44004 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0413 10:54:49.500621   44004 network.go:209] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc00273f0e0}
I0413 10:54:49.500621   44004 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0413 10:54:49.514624   44004 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0413 10:54:49.779609   44004 network_create.go:108] docker network minikube 192.168.49.0/24 created
I0413 10:54:49.779609   44004 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I0413 10:54:49.810618   44004 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0413 10:54:50.009644   44004 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0413 10:54:50.225643   44004 oci.go:103] Successfully created a docker volume minikube
I0413 10:54:50.237644   44004 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 -d /var/lib
I0413 10:54:55.562275   44004 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 -d /var/lib: (5.3246313s)
I0413 10:54:55.562275   44004 oci.go:107] Successfully prepared a docker volume minikube
I0413 10:54:55.562275   44004 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0413 10:54:55.562275   44004 kic.go:194] Starting extracting preloaded images to volume ...
I0413 10:54:55.570323   44004 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\bogdan.mierloiu\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 -I lz4 -xf /preloaded.tar -C /extractDir
I0413 10:55:09.164143   44004 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\bogdan.mierloiu\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 -I lz4 -xf /preloaded.tar -C /extractDir: (13.5938201s)
I0413 10:55:09.164143   44004 kic.go:203] duration metric: took 13.601868 seconds to extract preloaded images to volume
I0413 10:55:09.177111   44004 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0413 10:55:09.487674   44004 info.go:266] docker info: {ID:0b82f7f3-41cc-4c72-b72c-0978c5c0e217 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:2 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:64 OomKillDisable:true NGoroutines:101 SystemTime:2024-04-13 07:55:09.449707127 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:18 KernelVersion:5.15.146.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:16 MemTotal:16628744192 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:25.0.3 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:ae07eda36dd25f8a1b98dfbf587313b99c0190bb Expected:ae07eda36dd25f8a1b98dfbf587313b99c0190bb} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.12.1-desktop.4] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.24.6-desktop.1] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container. Vendor:Docker Inc. Version:0.0.24] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.22] map[Name:feedback Path:C:\Program Files\Docker\cli-plugins\docker-feedback.exe SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.4] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.0.1] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.5.0]] Warnings:<nil>}}
I0413 10:55:09.495255   44004 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0413 10:55:09.835974   44004 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=8100mb --memory-swap=8100mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0
I0413 10:55:14.432189   44004 cli_runner.go:217] Completed: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=8100mb --memory-swap=8100mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0: (4.5962153s)
I0413 10:55:14.445491   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0413 10:55:14.730487   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0413 10:55:14.992195   44004 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0413 10:55:15.324309   44004 oci.go:144] the created container "minikube" has a running status.
I0413 10:55:15.324309   44004 kic.go:225] Creating ssh key for kic: C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa...
I0413 10:55:15.460308   44004 kic_runner.go:191] docker (temp): C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0413 10:55:15.774793   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0413 10:55:16.025946   44004 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0413 10:55:16.026022   44004 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0413 10:55:16.360505   44004 kic.go:265] ensuring only current user has permissions to key file located at : C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa...
I0413 10:55:16.919717   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0413 10:55:17.136718   44004 machine.go:88] provisioning docker machine ...
I0413 10:55:17.136718   44004 ubuntu.go:169] provisioning hostname "minikube"
I0413 10:55:17.147719   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:17.363190   44004 main.go:141] libmachine: Using SSH client type: native
I0413 10:55:17.372466   44004 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x7547e0] 0x757320 <nil>  [] 0s} 127.0.0.1 64347 <nil> <nil>}
I0413 10:55:17.372466   44004 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0413 10:55:17.545197   44004 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0413 10:55:17.558198   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:17.788412   44004 main.go:141] libmachine: Using SSH client type: native
I0413 10:55:17.788934   44004 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x7547e0] 0x757320 <nil>  [] 0s} 127.0.0.1 64347 <nil> <nil>}
I0413 10:55:17.788934   44004 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0413 10:55:17.928189   44004 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0413 10:55:17.928189   44004 ubuntu.go:175] set auth options {CertDir:C:\Users\bogdan.mierloiu\.minikube CaCertPath:C:\Users\bogdan.mierloiu\.minikube\certs\ca.pem CaPrivateKeyPath:C:\Users\bogdan.mierloiu\.minikube\certs\ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:C:\Users\bogdan.mierloiu\.minikube\machines\server.pem ServerKeyPath:C:\Users\bogdan.mierloiu\.minikube\machines\server-key.pem ClientKeyPath:C:\Users\bogdan.mierloiu\.minikube\certs\key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:C:\Users\bogdan.mierloiu\.minikube\certs\cert.pem ServerCertSANs:[] StorePath:C:\Users\bogdan.mierloiu\.minikube}
I0413 10:55:17.928189   44004 ubuntu.go:177] setting up certificates
I0413 10:55:17.928189   44004 provision.go:83] configureAuth start
I0413 10:55:17.936283   44004 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0413 10:55:18.076627   44004 provision.go:138] copyHostCerts
I0413 10:55:18.077142   44004 exec_runner.go:144] found C:\Users\bogdan.mierloiu\.minikube/ca.pem, removing ...
I0413 10:55:18.077177   44004 exec_runner.go:203] rm: C:\Users\bogdan.mierloiu\.minikube\ca.pem
I0413 10:55:18.077177   44004 exec_runner.go:151] cp: C:\Users\bogdan.mierloiu\.minikube\certs\ca.pem --> C:\Users\bogdan.mierloiu\.minikube/ca.pem (1103 bytes)
I0413 10:55:18.078743   44004 exec_runner.go:144] found C:\Users\bogdan.mierloiu\.minikube/cert.pem, removing ...
I0413 10:55:18.078743   44004 exec_runner.go:203] rm: C:\Users\bogdan.mierloiu\.minikube\cert.pem
I0413 10:55:18.078743   44004 exec_runner.go:151] cp: C:\Users\bogdan.mierloiu\.minikube\certs\cert.pem --> C:\Users\bogdan.mierloiu\.minikube/cert.pem (1147 bytes)
I0413 10:55:18.079773   44004 exec_runner.go:144] found C:\Users\bogdan.mierloiu\.minikube/key.pem, removing ...
I0413 10:55:18.079773   44004 exec_runner.go:203] rm: C:\Users\bogdan.mierloiu\.minikube\key.pem
I0413 10:55:18.080284   44004 exec_runner.go:151] cp: C:\Users\bogdan.mierloiu\.minikube\certs\key.pem --> C:\Users\bogdan.mierloiu\.minikube/key.pem (1675 bytes)
I0413 10:55:18.080823   44004 provision.go:112] generating server cert: C:\Users\bogdan.mierloiu\.minikube\machines\server.pem ca-key=C:\Users\bogdan.mierloiu\.minikube\certs\ca.pem private-key=C:\Users\bogdan.mierloiu\.minikube\certs\ca-key.pem org=bogdan.mierloiu.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0413 10:55:18.122613   44004 provision.go:172] copyRemoteCerts
I0413 10:55:18.137556   44004 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0413 10:55:18.145627   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:18.293203   44004 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:64347 SSHKeyPath:C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa Username:docker}
I0413 10:55:18.401376   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\certs\ca.pem --> /etc/docker/ca.pem (1103 bytes)
I0413 10:55:18.416197   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\machines\server.pem --> /etc/docker/server.pem (1224 bytes)
I0413 10:55:18.433889   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\machines\server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0413 10:55:18.449516   44004 provision.go:86] duration metric: configureAuth took 521.3262ms
I0413 10:55:18.449516   44004 ubuntu.go:193] setting minikube options for container-runtime
I0413 10:55:18.450065   44004 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0413 10:55:18.457953   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:18.624425   44004 main.go:141] libmachine: Using SSH client type: native
I0413 10:55:18.624425   44004 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x7547e0] 0x757320 <nil>  [] 0s} 127.0.0.1 64347 <nil> <nil>}
I0413 10:55:18.624425   44004 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0413 10:55:18.757204   44004 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0413 10:55:18.757204   44004 ubuntu.go:71] root file system type: overlay
I0413 10:55:18.757204   44004 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0413 10:55:18.767199   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:18.921638   44004 main.go:141] libmachine: Using SSH client type: native
I0413 10:55:18.921638   44004 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x7547e0] 0x757320 <nil>  [] 0s} 127.0.0.1 64347 <nil> <nil>}
I0413 10:55:18.922156   44004 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0413 10:55:19.076470   44004 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0413 10:55:19.084895   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:19.246532   44004 main.go:141] libmachine: Using SSH client type: native
I0413 10:55:19.247075   44004 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x7547e0] 0x757320 <nil>  [] 0s} 127.0.0.1 64347 <nil> <nil>}
I0413 10:55:19.247075   44004 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0413 10:55:27.567216   44004 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2023-10-26 09:06:22.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2024-04-13 07:55:19.066410419 +0000
@@ -1,30 +1,32 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -32,16 +34,16 @@
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0413 10:55:27.567216   44004 machine.go:91] provisioned docker machine in 10.4304984s
I0413 10:55:27.567216   44004 client.go:171] LocalClient.Create took 38.9509395s
I0413 10:55:27.567216   44004 start.go:167] duration metric: libmachine.API.Create for "minikube" took 38.9509395s
I0413 10:55:27.567216   44004 start.go:300] post-start starting for "minikube" (driver="docker")
I0413 10:55:27.567216   44004 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0413 10:55:27.582215   44004 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0413 10:55:27.592214   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:27.802093   44004 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:64347 SSHKeyPath:C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa Username:docker}
I0413 10:55:27.929189   44004 ssh_runner.go:195] Run: cat /etc/os-release
I0413 10:55:27.934187   44004 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0413 10:55:27.934187   44004 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0413 10:55:27.934187   44004 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0413 10:55:27.934187   44004 info.go:137] Remote host: Ubuntu 22.04.3 LTS
I0413 10:55:27.934187   44004 filesync.go:126] Scanning C:\Users\bogdan.mierloiu\.minikube\addons for local assets ...
I0413 10:55:27.935187   44004 filesync.go:126] Scanning C:\Users\bogdan.mierloiu\.minikube\files for local assets ...
I0413 10:55:27.935187   44004 start.go:303] post-start completed in 367.9709ms
I0413 10:55:27.946190   44004 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0413 10:55:28.149188   44004 profile.go:148] Saving config to C:\Users\bogdan.mierloiu\.minikube\profiles\minikube\config.json ...
I0413 10:55:28.165187   44004 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0413 10:55:28.175196   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:28.389188   44004 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:64347 SSHKeyPath:C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa Username:docker}
I0413 10:55:28.513189   44004 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0413 10:55:28.522188   44004 start.go:128] duration metric: createHost completed in 39.9099112s
I0413 10:55:28.546188   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0413 10:55:28.754192   44004 fix.go:128] unexpected machine state, will restart: <nil>
I0413 10:55:28.754192   44004 machine.go:88] provisioning docker machine ...
I0413 10:55:28.754192   44004 ubuntu.go:169] provisioning hostname "minikube"
I0413 10:55:28.763188   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:28.964188   44004 main.go:141] libmachine: Using SSH client type: native
I0413 10:55:28.964188   44004 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x7547e0] 0x757320 <nil>  [] 0s} 127.0.0.1 64347 <nil> <nil>}
I0413 10:55:28.964188   44004 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0413 10:55:29.119786   44004 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0413 10:55:29.133791   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:29.374785   44004 main.go:141] libmachine: Using SSH client type: native
I0413 10:55:29.375785   44004 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x7547e0] 0x757320 <nil>  [] 0s} 127.0.0.1 64347 <nil> <nil>}
I0413 10:55:29.375785   44004 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0413 10:55:29.525223   44004 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0413 10:55:29.525223   44004 ubuntu.go:175] set auth options {CertDir:C:\Users\bogdan.mierloiu\.minikube CaCertPath:C:\Users\bogdan.mierloiu\.minikube\certs\ca.pem CaPrivateKeyPath:C:\Users\bogdan.mierloiu\.minikube\certs\ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:C:\Users\bogdan.mierloiu\.minikube\machines\server.pem ServerKeyPath:C:\Users\bogdan.mierloiu\.minikube\machines\server-key.pem ClientKeyPath:C:\Users\bogdan.mierloiu\.minikube\certs\key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:C:\Users\bogdan.mierloiu\.minikube\certs\cert.pem ServerCertSANs:[] StorePath:C:\Users\bogdan.mierloiu\.minikube}
I0413 10:55:29.525223   44004 ubuntu.go:177] setting up certificates
I0413 10:55:29.525223   44004 provision.go:83] configureAuth start
I0413 10:55:29.534229   44004 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0413 10:55:29.765224   44004 provision.go:138] copyHostCerts
I0413 10:55:29.765224   44004 exec_runner.go:144] found C:\Users\bogdan.mierloiu\.minikube/ca.pem, removing ...
I0413 10:55:29.765224   44004 exec_runner.go:203] rm: C:\Users\bogdan.mierloiu\.minikube\ca.pem
I0413 10:55:29.766224   44004 exec_runner.go:151] cp: C:\Users\bogdan.mierloiu\.minikube\certs\ca.pem --> C:\Users\bogdan.mierloiu\.minikube/ca.pem (1103 bytes)
I0413 10:55:29.767223   44004 exec_runner.go:144] found C:\Users\bogdan.mierloiu\.minikube/cert.pem, removing ...
I0413 10:55:29.767223   44004 exec_runner.go:203] rm: C:\Users\bogdan.mierloiu\.minikube\cert.pem
I0413 10:55:29.767223   44004 exec_runner.go:151] cp: C:\Users\bogdan.mierloiu\.minikube\certs\cert.pem --> C:\Users\bogdan.mierloiu\.minikube/cert.pem (1147 bytes)
I0413 10:55:29.768223   44004 exec_runner.go:144] found C:\Users\bogdan.mierloiu\.minikube/key.pem, removing ...
I0413 10:55:29.768223   44004 exec_runner.go:203] rm: C:\Users\bogdan.mierloiu\.minikube\key.pem
I0413 10:55:29.768223   44004 exec_runner.go:151] cp: C:\Users\bogdan.mierloiu\.minikube\certs\key.pem --> C:\Users\bogdan.mierloiu\.minikube/key.pem (1675 bytes)
I0413 10:55:29.769224   44004 provision.go:112] generating server cert: C:\Users\bogdan.mierloiu\.minikube\machines\server.pem ca-key=C:\Users\bogdan.mierloiu\.minikube\certs\ca.pem private-key=C:\Users\bogdan.mierloiu\.minikube\certs\ca-key.pem org=bogdan.mierloiu.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0413 10:55:29.896226   44004 provision.go:172] copyRemoteCerts
I0413 10:55:29.915223   44004 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0413 10:55:29.926230   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:30.128219   44004 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:64347 SSHKeyPath:C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa Username:docker}
I0413 10:55:30.249798   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\certs\ca.pem --> /etc/docker/ca.pem (1103 bytes)
I0413 10:55:30.270764   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\machines\server.pem --> /etc/docker/server.pem (1224 bytes)
I0413 10:55:30.293914   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\machines\server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0413 10:55:30.319665   44004 provision.go:86] duration metric: configureAuth took 794.4411ms
I0413 10:55:30.319665   44004 ubuntu.go:193] setting minikube options for container-runtime
I0413 10:55:30.320191   44004 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0413 10:55:30.333944   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:30.572131   44004 main.go:141] libmachine: Using SSH client type: native
I0413 10:55:30.572131   44004 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x7547e0] 0x757320 <nil>  [] 0s} 127.0.0.1 64347 <nil> <nil>}
I0413 10:55:30.572131   44004 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0413 10:55:30.716132   44004 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0413 10:55:30.716132   44004 ubuntu.go:71] root file system type: overlay
I0413 10:55:30.716132   44004 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0413 10:55:30.729140   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:30.952239   44004 main.go:141] libmachine: Using SSH client type: native
I0413 10:55:30.952239   44004 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x7547e0] 0x757320 <nil>  [] 0s} 127.0.0.1 64347 <nil> <nil>}
I0413 10:55:30.952239   44004 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0413 10:55:31.102235   44004 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0413 10:55:31.112234   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:31.267384   44004 main.go:141] libmachine: Using SSH client type: native
I0413 10:55:31.268092   44004 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x7547e0] 0x757320 <nil>  [] 0s} 127.0.0.1 64347 <nil> <nil>}
I0413 10:55:31.268092   44004 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0413 10:55:31.418364   44004 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0413 10:55:31.418364   44004 machine.go:91] provisioned docker machine in 2.6641717s
I0413 10:55:31.418364   44004 start.go:300] post-start starting for "minikube" (driver="docker")
I0413 10:55:31.418364   44004 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0413 10:55:31.432572   44004 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0413 10:55:31.440552   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:31.586213   44004 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:64347 SSHKeyPath:C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa Username:docker}
I0413 10:55:31.700940   44004 ssh_runner.go:195] Run: cat /etc/os-release
I0413 10:55:31.704637   44004 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0413 10:55:31.704637   44004 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0413 10:55:31.704637   44004 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0413 10:55:31.704637   44004 info.go:137] Remote host: Ubuntu 22.04.3 LTS
I0413 10:55:31.704637   44004 filesync.go:126] Scanning C:\Users\bogdan.mierloiu\.minikube\addons for local assets ...
I0413 10:55:31.704637   44004 filesync.go:126] Scanning C:\Users\bogdan.mierloiu\.minikube\files for local assets ...
I0413 10:55:31.704637   44004 start.go:303] post-start completed in 286.2732ms
I0413 10:55:31.716332   44004 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0413 10:55:31.724264   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:31.878290   44004 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:64347 SSHKeyPath:C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa Username:docker}
I0413 10:55:31.987811   44004 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0413 10:55:31.992071   44004 fix.go:56] fixHost completed within 1m3.7723899s
I0413 10:55:31.992071   44004 start.go:83] releasing machines lock for "minikube", held for 1m3.7723899s
I0413 10:55:31.999610   44004 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0413 10:55:32.156821   44004 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0413 10:55:32.166270   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:32.171060   44004 ssh_runner.go:195] Run: cat /version.json
I0413 10:55:32.184204   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 10:55:32.325807   44004 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:64347 SSHKeyPath:C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa Username:docker}
I0413 10:55:32.335801   44004 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:64347 SSHKeyPath:C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa Username:docker}
I0413 10:55:32.769260   44004 ssh_runner.go:195] Run: systemctl --version
I0413 10:55:32.788432   44004 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0413 10:55:32.807790   44004 ssh_runner.go:195] Run: sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
W0413 10:55:32.815777   44004 start.go:416] unable to name loopback interface in configureRuntimes: unable to patch loopback cni config "/etc/cni/net.d/*loopback.conf*": sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;: Process exited with status 1
stdout:

stderr:
find: '\\etc\\cni\\net.d': No such file or directory
I0413 10:55:32.828760   44004 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0413 10:55:32.865356   44004 cni.go:262] disabled [/etc/cni/net.d/87-podman-bridge.conflist, /etc/cni/net.d/100-crio-bridge.conf] bridge cni config(s)
I0413 10:55:32.865356   44004 start.go:472] detecting cgroup driver to use...
I0413 10:55:32.865356   44004 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0413 10:55:32.865356   44004 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0413 10:55:32.888031   44004 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0413 10:55:32.914569   44004 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0413 10:55:32.925003   44004 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I0413 10:55:32.937152   44004 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0413 10:55:32.961070   44004 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0413 10:55:32.981757   44004 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0413 10:55:33.003319   44004 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0413 10:55:33.028040   44004 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0413 10:55:33.052081   44004 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0413 10:55:33.074268   44004 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0413 10:55:33.098460   44004 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0413 10:55:33.119817   44004 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0413 10:55:33.227524   44004 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0413 10:55:33.341157   44004 start.go:472] detecting cgroup driver to use...
I0413 10:55:33.341157   44004 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0413 10:55:33.354173   44004 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0413 10:55:33.363718   44004 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0413 10:55:33.376414   44004 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0413 10:55:33.385871   44004 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0413 10:55:33.412316   44004 ssh_runner.go:195] Run: which cri-dockerd
I0413 10:55:33.430825   44004 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0413 10:55:33.438953   44004 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0413 10:55:33.465364   44004 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0413 10:55:33.567049   44004 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0413 10:55:33.652526   44004 docker.go:560] configuring docker to use "cgroupfs" as cgroup driver...
I0413 10:55:33.652526   44004 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0413 10:55:33.678106   44004 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0413 10:55:33.792590   44004 ssh_runner.go:195] Run: sudo systemctl restart docker
I0413 10:55:34.140652   44004 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0413 10:55:34.244662   44004 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0413 10:55:34.340498   44004 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0413 10:55:34.503202   44004 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0413 10:55:34.682202   44004 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0413 10:55:34.730202   44004 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0413 10:55:34.949203   44004 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0413 10:55:35.061202   44004 start.go:519] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0413 10:55:35.087203   44004 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0413 10:55:35.093203   44004 start.go:540] Will wait 60s for crictl version
I0413 10:55:35.112203   44004 ssh_runner.go:195] Run: which crictl
I0413 10:55:35.134202   44004 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0413 10:55:35.197203   44004 start.go:556] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.7
RuntimeApiVersion:  v1
I0413 10:55:35.208200   44004 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0413 10:55:35.241642   44004 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0413 10:55:35.266689   44004 out.go:204] * Preparing Kubernetes v1.28.3 on Docker 24.0.7 ...
I0413 17:14:15.645333   44004 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0413 17:14:20.871148   44004 cli_runner.go:217] Completed: docker exec -t minikube dig +short host.docker.internal: (5.2258143s)
I0413 17:14:20.871148   44004 network.go:96] got host ip for mount in container by digging dns: 192.168.65.254
I0413 17:14:20.903162   44004 ssh_runner.go:195] Run: grep 192.168.65.254	host.minikube.internal$ /etc/hosts
I0413 17:14:20.920753   44004 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.254	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0413 17:14:20.991754   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0413 17:14:21.538146   44004 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0413 17:14:21.562758   44004 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0413 17:14:21.616390   44004 docker.go:671] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/etcd:3.5.9-0
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0413 17:14:21.624530   44004 docker.go:601] Images already preloaded, skipping extraction
I0413 17:14:21.654291   44004 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0413 17:14:21.718016   44004 docker.go:671] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/etcd:3.5.9-0
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0413 17:14:21.718016   44004 cache_images.go:84] Images are preloaded, skipping loading
I0413 17:14:21.747012   44004 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0413 17:14:21.983291   44004 cni.go:84] Creating CNI manager for ""
I0413 17:14:21.985040   44004 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0413 17:14:21.986144   44004 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0413 17:14:21.986144   44004 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.28.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0413 17:14:21.986715   44004 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.28.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0413 17:14:21.986715   44004 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.28.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0413 17:14:22.022194   44004 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.28.3
I0413 17:14:22.038213   44004 binaries.go:44] Found k8s binaries, skipping transfer
I0413 17:14:22.080718   44004 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0413 17:14:22.100981   44004 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (369 bytes)
I0413 17:14:22.150817   44004 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0413 17:14:22.180673   44004 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2091 bytes)
I0413 17:14:22.240292   44004 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0413 17:14:22.249294   44004 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0413 17:14:22.273770   44004 certs.go:56] Setting up C:\Users\bogdan.mierloiu\.minikube\profiles\minikube for IP: 192.168.49.2
I0413 17:14:22.274770   44004 certs.go:190] acquiring lock for shared ca certs: {Name:mk9107b3255d0c6bfdde61edbc945460627a0090 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0413 17:14:22.294123   44004 certs.go:199] skipping minikubeCA CA generation: C:\Users\bogdan.mierloiu\.minikube\ca.key
I0413 17:14:22.328325   44004 certs.go:199] skipping proxyClientCA CA generation: C:\Users\bogdan.mierloiu\.minikube\proxy-client-ca.key
I0413 17:14:22.329942   44004 certs.go:315] skipping minikube-user signed cert generation: C:\Users\bogdan.mierloiu\.minikube\profiles\minikube\client.key
I0413 17:14:22.361270   44004 certs.go:315] skipping minikube signed cert generation: C:\Users\bogdan.mierloiu\.minikube\profiles\minikube\apiserver.key.dd3b5fb2
I0413 17:14:22.394988   44004 certs.go:315] skipping aggregator signed cert generation: C:\Users\bogdan.mierloiu\.minikube\profiles\minikube\proxy-client.key
I0413 17:14:22.409006   44004 certs.go:437] found cert: C:\Users\bogdan.mierloiu\.minikube\certs\C:\Users\bogdan.mierloiu\.minikube\certs\ca-key.pem (1675 bytes)
I0413 17:14:22.427672   44004 certs.go:437] found cert: C:\Users\bogdan.mierloiu\.minikube\certs\C:\Users\bogdan.mierloiu\.minikube\certs\ca.pem (1103 bytes)
I0413 17:14:22.444416   44004 certs.go:437] found cert: C:\Users\bogdan.mierloiu\.minikube\certs\C:\Users\bogdan.mierloiu\.minikube\certs\cert.pem (1147 bytes)
I0413 17:14:22.464584   44004 certs.go:437] found cert: C:\Users\bogdan.mierloiu\.minikube\certs\C:\Users\bogdan.mierloiu\.minikube\certs\key.pem (1675 bytes)
I0413 17:14:22.487843   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\profiles\minikube\apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0413 17:14:22.525414   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\profiles\minikube\apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0413 17:14:22.563319   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\profiles\minikube\proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0413 17:14:22.601731   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\profiles\minikube\proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0413 17:14:22.637241   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0413 17:14:22.674907   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0413 17:14:22.714182   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0413 17:14:22.751183   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0413 17:14:22.787354   44004 ssh_runner.go:362] scp C:\Users\bogdan.mierloiu\.minikube\ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0413 17:14:22.826035   44004 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (740 bytes)
I0413 17:14:22.889243   44004 ssh_runner.go:195] Run: openssl version
I0413 17:14:22.930242   44004 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0413 17:14:22.980385   44004 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0413 17:14:22.988372   44004 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Apr 12 07:04 /usr/share/ca-certificates/minikubeCA.pem
I0413 17:14:23.016374   44004 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0413 17:14:23.055373   44004 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0413 17:14:23.092376   44004 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I0413 17:14:23.101079   44004 certs.go:353] certs directory doesn't exist, likely first start: ls /var/lib/minikube/certs/etcd: Process exited with status 2
stdout:

stderr:
ls: cannot access '/var/lib/minikube/certs/etcd': No such file or directory
I0413 17:14:23.102153   44004 kubeadm.go:404] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:8100 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\bogdan.mierloiu:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0413 17:14:23.123224   44004 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0413 17:14:23.175272   44004 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0413 17:14:23.208438   44004 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0413 17:14:23.226718   44004 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I0413 17:14:23.259012   44004 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0413 17:14:23.271016   44004 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0413 17:14:23.271016   44004 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0413 17:14:23.395618   44004 kubeadm.go:322] 	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
I0413 17:14:23.486793   44004 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0413 17:14:35.684340   44004 kubeadm.go:322] [init] Using Kubernetes version: v1.28.3
I0413 17:14:35.684340   44004 kubeadm.go:322] [preflight] Running pre-flight checks
I0413 17:14:35.684845   44004 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0413 17:14:35.685037   44004 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0413 17:14:35.685037   44004 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0413 17:14:35.685037   44004 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0413 17:14:35.688731   44004 out.go:204]   - Generating certificates and keys ...
I0413 17:14:35.689791   44004 kubeadm.go:322] [certs] Using existing ca certificate authority
I0413 17:14:35.689791   44004 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I0413 17:14:35.689791   44004 kubeadm.go:322] [certs] Generating "apiserver-kubelet-client" certificate and key
I0413 17:14:35.689791   44004 kubeadm.go:322] [certs] Generating "front-proxy-ca" certificate and key
I0413 17:14:35.690359   44004 kubeadm.go:322] [certs] Generating "front-proxy-client" certificate and key
I0413 17:14:35.690359   44004 kubeadm.go:322] [certs] Generating "etcd/ca" certificate and key
I0413 17:14:35.690359   44004 kubeadm.go:322] [certs] Generating "etcd/server" certificate and key
I0413 17:14:35.690359   44004 kubeadm.go:322] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0413 17:14:35.690359   44004 kubeadm.go:322] [certs] Generating "etcd/peer" certificate and key
I0413 17:14:35.690878   44004 kubeadm.go:322] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0413 17:14:35.690878   44004 kubeadm.go:322] [certs] Generating "etcd/healthcheck-client" certificate and key
I0413 17:14:35.690878   44004 kubeadm.go:322] [certs] Generating "apiserver-etcd-client" certificate and key
I0413 17:14:35.690878   44004 kubeadm.go:322] [certs] Generating "sa" key and public key
I0413 17:14:35.690878   44004 kubeadm.go:322] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0413 17:14:35.690878   44004 kubeadm.go:322] [kubeconfig] Writing "admin.conf" kubeconfig file
I0413 17:14:35.691401   44004 kubeadm.go:322] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0413 17:14:35.691401   44004 kubeadm.go:322] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0413 17:14:35.691401   44004 kubeadm.go:322] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0413 17:14:35.691401   44004 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0413 17:14:35.691401   44004 kubeadm.go:322] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0413 17:14:35.696218   44004 out.go:204]   - Booting up control plane ...
I0413 17:14:35.697586   44004 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0413 17:14:35.697586   44004 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0413 17:14:35.697586   44004 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0413 17:14:35.697586   44004 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0413 17:14:35.698091   44004 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0413 17:14:35.698109   44004 kubeadm.go:322] [kubelet-start] Starting the kubelet
I0413 17:14:35.698109   44004 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
I0413 17:14:35.698109   44004 kubeadm.go:322] [apiclient] All control plane components are healthy after 7.502884 seconds
I0413 17:14:35.698625   44004 kubeadm.go:322] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0413 17:14:35.698625   44004 kubeadm.go:322] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0413 17:14:35.699154   44004 kubeadm.go:322] [upload-certs] Skipping phase. Please see --upload-certs
I0413 17:14:35.699668   44004 kubeadm.go:322] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0413 17:14:35.699668   44004 kubeadm.go:322] [bootstrap-token] Using token: mtdbnt.c7kbchecbuf4vn49
I0413 17:14:35.703637   44004 out.go:204]   - Configuring RBAC rules ...
I0413 17:14:35.704165   44004 kubeadm.go:322] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0413 17:14:35.708424   44004 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0413 17:14:35.708936   44004 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0413 17:14:35.708936   44004 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0413 17:14:35.709450   44004 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0413 17:14:35.709450   44004 kubeadm.go:322] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0413 17:14:35.709450   44004 kubeadm.go:322] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0413 17:14:35.709450   44004 kubeadm.go:322] [addons] Applied essential addon: CoreDNS
I0413 17:14:35.709954   44004 kubeadm.go:322] [addons] Applied essential addon: kube-proxy
I0413 17:14:35.709967   44004 kubeadm.go:322] 
I0413 17:14:35.709977   44004 kubeadm.go:322] Your Kubernetes control-plane has initialized successfully!
I0413 17:14:35.709977   44004 kubeadm.go:322] 
I0413 17:14:35.709977   44004 kubeadm.go:322] To start using your cluster, you need to run the following as a regular user:
I0413 17:14:35.709977   44004 kubeadm.go:322] 
I0413 17:14:35.709977   44004 kubeadm.go:322]   mkdir -p $HOME/.kube
I0413 17:14:35.709977   44004 kubeadm.go:322]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0413 17:14:35.709977   44004 kubeadm.go:322]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0413 17:14:35.709977   44004 kubeadm.go:322] 
I0413 17:14:35.709977   44004 kubeadm.go:322] Alternatively, if you are the root user, you can run:
I0413 17:14:35.709977   44004 kubeadm.go:322] 
I0413 17:14:35.709977   44004 kubeadm.go:322]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0413 17:14:35.709977   44004 kubeadm.go:322] 
I0413 17:14:35.710495   44004 kubeadm.go:322] You should now deploy a pod network to the cluster.
I0413 17:14:35.710495   44004 kubeadm.go:322] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0413 17:14:35.710495   44004 kubeadm.go:322]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0413 17:14:35.710495   44004 kubeadm.go:322] 
I0413 17:14:35.710495   44004 kubeadm.go:322] You can now join any number of control-plane nodes by copying certificate authorities
I0413 17:14:35.710495   44004 kubeadm.go:322] and service account keys on each node and then running the following as root:
I0413 17:14:35.710495   44004 kubeadm.go:322] 
I0413 17:14:35.710495   44004 kubeadm.go:322]   kubeadm join control-plane.minikube.internal:8443 --token mtdbnt.c7kbchecbuf4vn49 \
I0413 17:14:35.711016   44004 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:e64e248ec582a053581db5d780ef28d38be129d203d9400bee4ae094e7416151 \
I0413 17:14:35.711016   44004 kubeadm.go:322] 	--control-plane 
I0413 17:14:35.711016   44004 kubeadm.go:322] 
I0413 17:14:35.711016   44004 kubeadm.go:322] Then you can join any number of worker nodes by running the following on each as root:
I0413 17:14:35.711016   44004 kubeadm.go:322] 
I0413 17:14:35.711016   44004 kubeadm.go:322] kubeadm join control-plane.minikube.internal:8443 --token mtdbnt.c7kbchecbuf4vn49 \
I0413 17:14:35.711016   44004 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:e64e248ec582a053581db5d780ef28d38be129d203d9400bee4ae094e7416151 
I0413 17:14:35.711016   44004 cni.go:84] Creating CNI manager for ""
I0413 17:14:35.711016   44004 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0413 17:14:35.715081   44004 out.go:177] * Configuring bridge CNI (Container Networking Interface) ...
I0413 17:14:35.738631   44004 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0413 17:14:35.781544   44004 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (457 bytes)
I0413 17:14:35.805114   44004 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0413 17:14:35.829310   44004 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.28.3/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0413 17:14:35.832516   44004 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.28.3/kubectl label nodes minikube.k8s.io/version=v1.32.0 minikube.k8s.io/commit=8220a6eb95f0a4d75f7f2d7b14cef975f050512d minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2024_04_13T17_14_35_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0413 17:14:35.880601   44004 ops.go:34] apiserver oom_adj: -16
I0413 17:14:36.062003   44004 kubeadm.go:1081] duration metric: took 256.8884ms to wait for elevateKubeSystemPrivileges.
I0413 17:14:36.062003   44004 kubeadm.go:406] StartCluster complete in 12.9598761s
I0413 17:14:36.062003   44004 settings.go:142] acquiring lock: {Name:mkf4b5479d95b2233fba1618808e052d12976e61 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0413 17:14:36.062003   44004 settings.go:150] Updating kubeconfig:  C:\Users\bogdan.mierloiu\.kube\config
I0413 17:14:36.063612   44004 lock.go:35] WriteFile acquiring C:\Users\bogdan.mierloiu\.kube\config: {Name:mk2808954e190c0aca9012ebb62c4f048a10df46 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0413 17:14:36.064667   44004 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0413 17:14:36.064667   44004 addons.go:499] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volumesnapshots:false]
I0413 17:14:36.064667   44004 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0413 17:14:36.064667   44004 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0413 17:14:36.064667   44004 addons.go:231] Setting addon storage-provisioner=true in "minikube"
W0413 17:14:36.064667   44004 addons.go:240] addon storage-provisioner should already be in state true
I0413 17:14:36.064667   44004 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0413 17:14:36.065205   44004 host.go:66] Checking if "minikube" exists ...
I0413 17:14:36.080832   44004 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0413 17:14:36.124244   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0413 17:14:36.127247   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0413 17:14:36.192241   44004 kapi.go:248] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0413 17:14:36.192241   44004 start.go:223] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0413 17:14:36.194242   44004 out.go:177] * Verifying Kubernetes components...
I0413 17:14:36.196241   44004 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.254 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.28.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0413 17:14:36.218245   44004 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0413 17:14:36.340825   44004 addons.go:231] Setting addon default-storageclass=true in "minikube"
I0413 17:14:36.345362   44004 out.go:177]   - Using image gcr.io/k8s-minikube/storage-provisioner:v5
W0413 17:14:36.345362   44004 addons.go:240] addon default-storageclass should already be in state true
I0413 17:14:36.345362   44004 host.go:66] Checking if "minikube" exists ...
I0413 17:14:36.372185   44004 addons.go:423] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0413 17:14:36.372185   44004 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0413 17:14:36.385041   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 17:14:36.397824   44004 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0413 17:14:36.599366   44004 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:64347 SSHKeyPath:C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa Username:docker}
I0413 17:14:36.611524   44004 addons.go:423] installing /etc/kubernetes/addons/storageclass.yaml
I0413 17:14:36.611524   44004 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0413 17:14:36.628256   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0413 17:14:36.758686   44004 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.28.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0413 17:14:36.843655   44004 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:64347 SSHKeyPath:C:\Users\bogdan.mierloiu\.minikube\machines\minikube\id_rsa Username:docker}
I0413 17:14:36.883513   44004 start.go:926] {"host.minikube.internal": 192.168.65.254} host record injected into CoreDNS's ConfigMap
I0413 17:14:36.896770   44004 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0413 17:14:37.016946   44004 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.28.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0413 17:14:37.075333   44004 api_server.go:52] waiting for apiserver process to appear ...
I0413 17:14:37.095481   44004 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0413 17:14:37.257715   44004 api_server.go:72] duration metric: took 1.0654735s to wait for apiserver process to appear ...
I0413 17:14:37.257715   44004 api_server.go:88] waiting for apiserver healthz status ...
I0413 17:14:37.257715   44004 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:64346/healthz ...
I0413 17:14:37.264697   44004 api_server.go:279] https://127.0.0.1:64346/healthz returned 200:
ok
I0413 17:14:37.266279   44004 api_server.go:141] control plane version: v1.28.3
I0413 17:14:37.266279   44004 api_server.go:131] duration metric: took 8.5646ms to wait for apiserver health ...
I0413 17:14:37.266279   44004 system_pods.go:43] waiting for kube-system pods to appear ...
I0413 17:14:37.269499   44004 out.go:177] * Enabled addons: storage-provisioner, default-storageclass
I0413 17:14:37.273618   44004 addons.go:502] enable addons completed in 1.2089513s: enabled=[storage-provisioner default-storageclass]
I0413 17:14:37.276278   44004 system_pods.go:59] 5 kube-system pods found
I0413 17:14:37.276784   44004 system_pods.go:61] "etcd-minikube" [c20060af-1285-4b2c-9662-a82e1179062b] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0413 17:14:37.276784   44004 system_pods.go:61] "kube-apiserver-minikube" [72a962df-7d82-4828-a904-5d656e523bb3] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0413 17:14:37.276797   44004 system_pods.go:61] "kube-controller-manager-minikube" [de5e702d-af13-431c-bf34-94e664a857d9] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0413 17:14:37.276805   44004 system_pods.go:61] "kube-scheduler-minikube" [eca0efa6-8a7e-44d5-a10e-90d7b961e37f] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0413 17:14:37.276805   44004 system_pods.go:61] "storage-provisioner" [68e70f99-4060-4499-acf3-168ee51a1622] Pending: PodScheduled:Unschedulable (0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..)
I0413 17:14:37.276805   44004 system_pods.go:74] duration metric: took 10.5261ms to wait for pod list to return data ...
I0413 17:14:37.276805   44004 kubeadm.go:581] duration metric: took 1.0845642s to wait for : map[apiserver:true system_pods:true] ...
I0413 17:14:37.276805   44004 node_conditions.go:102] verifying NodePressure condition ...
I0413 17:14:37.283907   44004 node_conditions.go:122] node storage ephemeral capacity is 1055762868Ki
I0413 17:14:37.283907   44004 node_conditions.go:123] node cpu capacity is 16
I0413 17:14:37.283907   44004 node_conditions.go:105] duration metric: took 7.1013ms to run NodePressure ...
I0413 17:14:37.283907   44004 start.go:228] waiting for startup goroutines ...
I0413 17:14:37.283907   44004 start.go:233] waiting for cluster config update ...
I0413 17:14:37.283907   44004 start.go:242] writing updated cluster config ...
I0413 17:14:37.301451   44004 ssh_runner.go:195] Run: rm -f paused
I0413 17:14:37.622171   44004 start.go:600] kubectl: 1.29.1, cluster: 1.28.3 (minor skew: 1)
I0413 17:14:37.625699   44004 out.go:177] * Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default

* 
* ==> Docker <==
* Apr 13 14:30:55 minikube dockerd[1260]: time="2024-04-13T14:30:55.204130096Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:33:35 minikube dockerd[1260]: time="2024-04-13T14:33:35.075834376Z" level=warning msg="Error getting v2 registry: Get \"https://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:33:35 minikube dockerd[1260]: time="2024-04-13T14:33:35.075872618Z" level=info msg="Attempting next endpoint for pull after error: Get \"https://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:33:35 minikube dockerd[1260]: time="2024-04-13T14:33:35.076108197Z" level=warning msg="Error getting v2 registry: Get \"http://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:33:35 minikube dockerd[1260]: time="2024-04-13T14:33:35.076118564Z" level=info msg="Attempting next endpoint for pull after error: Get \"http://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:33:35 minikube dockerd[1260]: time="2024-04-13T14:33:35.081918075Z" level=error msg="Handler for POST /v1.42/images/create returned error: Get \"http://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:36:08 minikube dockerd[1260]: time="2024-04-13T14:36:08.046441484Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:36:08 minikube dockerd[1260]: time="2024-04-13T14:36:08.046495774Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:38:50 minikube dockerd[1260]: time="2024-04-13T14:38:50.074552212Z" level=warning msg="Error getting v2 registry: Get \"https://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:38:50 minikube dockerd[1260]: time="2024-04-13T14:38:50.074586920Z" level=info msg="Attempting next endpoint for pull after error: Get \"https://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:38:50 minikube dockerd[1260]: time="2024-04-13T14:38:50.074786081Z" level=warning msg="Error getting v2 registry: Get \"http://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:38:50 minikube dockerd[1260]: time="2024-04-13T14:38:50.074793961Z" level=info msg="Attempting next endpoint for pull after error: Get \"http://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:38:50 minikube dockerd[1260]: time="2024-04-13T14:38:50.079781444Z" level=error msg="Handler for POST /v1.42/images/create returned error: Get \"http://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:39:52 minikube dockerd[1260]: time="2024-04-13T14:39:52.827531112Z" level=warning msg="no trace recorder found, skipping"
Apr 13 14:41:19 minikube dockerd[1260]: time="2024-04-13T14:41:19.968471762Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:41:19 minikube dockerd[1260]: time="2024-04-13T14:41:19.968530509Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:42:47 minikube dockerd[1260]: time="2024-04-13T14:42:47.350350909Z" level=info msg="ignoring event" container=c2075bfe388076f0dcac14d3ba93f39ba61f10903244c1eed14d633b838cf12b module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Apr 13 14:42:47 minikube cri-dockerd[1479]: time="2024-04-13T14:42:47Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/e1d5867325988a7d01eb225a942f4fb2617d9d271a093a9cbf7bebf3a1e7bd82/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Apr 13 14:42:49 minikube dockerd[1260]: time="2024-04-13T14:42:49.809314765Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:42:49 minikube dockerd[1260]: time="2024-04-13T14:42:49.809350490Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:43:04 minikube dockerd[1260]: time="2024-04-13T14:43:04.932797522Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:43:04 minikube dockerd[1260]: time="2024-04-13T14:43:04.932834209Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:43:32 minikube dockerd[1260]: time="2024-04-13T14:43:32.955756967Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:43:32 minikube dockerd[1260]: time="2024-04-13T14:43:32.955818177Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:44:03 minikube dockerd[1260]: time="2024-04-13T14:44:03.068434946Z" level=warning msg="Error getting v2 registry: Get \"https://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:44:03 minikube dockerd[1260]: time="2024-04-13T14:44:03.068466930Z" level=info msg="Attempting next endpoint for pull after error: Get \"https://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:44:03 minikube dockerd[1260]: time="2024-04-13T14:44:03.068670072Z" level=warning msg="Error getting v2 registry: Get \"http://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:44:03 minikube dockerd[1260]: time="2024-04-13T14:44:03.068681387Z" level=info msg="Attempting next endpoint for pull after error: Get \"http://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:44:03 minikube dockerd[1260]: time="2024-04-13T14:44:03.073234705Z" level=error msg="Handler for POST /v1.42/images/create returned error: Get \"http://localhost:5000/v2/\": dial tcp 127.0.0.1:5000: connect: connection refused"
Apr 13 14:44:28 minikube dockerd[1260]: time="2024-04-13T14:44:28.014413888Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:44:28 minikube dockerd[1260]: time="2024-04-13T14:44:28.014456091Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:45:06 minikube dockerd[1260]: time="2024-04-13T14:45:06.358893108Z" level=info msg="ignoring event" container=d60ca352bd44d4795c4370893ed3aeaac3263b63ba908097c3fa051f18f65f88 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Apr 13 14:45:06 minikube cri-dockerd[1479]: time="2024-04-13T14:45:06Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/c26ee99864d4fe7bef70a224fa63068242135855797741e737b04f7f0e6639f4/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Apr 13 14:45:08 minikube dockerd[1260]: time="2024-04-13T14:45:08.848418753Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:45:08 minikube dockerd[1260]: time="2024-04-13T14:45:08.848458015Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:45:22 minikube dockerd[1260]: time="2024-04-13T14:45:22.940707455Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:45:22 minikube dockerd[1260]: time="2024-04-13T14:45:22.940746521Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:45:49 minikube dockerd[1260]: time="2024-04-13T14:45:49.928650928Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:45:49 minikube dockerd[1260]: time="2024-04-13T14:45:49.928692110Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:45:51 minikube dockerd[1260]: time="2024-04-13T14:45:51.790249143Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:45:51 minikube dockerd[1260]: time="2024-04-13T14:45:51.790300421Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:46:42 minikube dockerd[1260]: time="2024-04-13T14:46:42.970000729Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:46:42 minikube dockerd[1260]: time="2024-04-13T14:46:42.970054356Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:47:45 minikube dockerd[1260]: time="2024-04-13T14:47:45.775454466Z" level=warning msg="no trace recorder found, skipping"
Apr 13 14:48:13 minikube dockerd[1260]: time="2024-04-13T14:48:13.967763318Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:48:13 minikube dockerd[1260]: time="2024-04-13T14:48:13.967820036Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:48:43 minikube dockerd[1260]: time="2024-04-13T14:48:43.904843679Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:48:43 minikube dockerd[1260]: time="2024-04-13T14:48:43.904917632Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:49:06 minikube dockerd[1260]: time="2024-04-13T14:49:06.135956931Z" level=warning msg="no trace recorder found, skipping"
Apr 13 14:50:58 minikube dockerd[1260]: time="2024-04-13T14:50:58.042807817Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:50:58 minikube dockerd[1260]: time="2024-04-13T14:50:58.042861735Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:51:05 minikube dockerd[1260]: time="2024-04-13T14:51:05.537748211Z" level=info msg="ignoring event" container=fb6869daca9c8572ede8c6bcda640893f2bbb4d330181d512f52e7538dc171da module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Apr 13 14:53:47 minikube dockerd[1260]: time="2024-04-13T14:53:47.998947538Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:53:47 minikube dockerd[1260]: time="2024-04-13T14:53:47.998984814Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:56:00 minikube dockerd[1260]: time="2024-04-13T14:56:00.005032338Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:56:00 minikube dockerd[1260]: time="2024-04-13T14:56:00.005075567Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 14:58:59 minikube dockerd[1260]: time="2024-04-13T14:58:59.005930950Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 14:58:59 minikube dockerd[1260]: time="2024-04-13T14:58:59.005979395Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Apr 13 15:01:06 minikube dockerd[1260]: time="2024-04-13T15:01:06.971218669Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Apr 13 15:01:06 minikube dockerd[1260]: time="2024-04-13T15:01:06.971263314Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"

* 
* ==> container status <==
* CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
c0411f1f7f7d3       6e38f40d628db       46 minutes ago      Running             storage-provisioner       1                   0b95f09ea80cd       storage-provisioner
f377dccd5b182       ead0a4a53df89       47 minutes ago      Running             coredns                   0                   75f25dcd793c3       coredns-5dd5756b68-mtprx
32ceb2b39f796       bfc896cf80fba       47 minutes ago      Running             kube-proxy                0                   578facf294518       kube-proxy-svcm8
cc93072271cef       6e38f40d628db       47 minutes ago      Exited              storage-provisioner       0                   0b95f09ea80cd       storage-provisioner
78a5d6b8fa5cf       5374347291230       47 minutes ago      Running             kube-apiserver            0                   a9fddd4face79       kube-apiserver-minikube
05261cd271c39       6d1b4fd1b182d       47 minutes ago      Running             kube-scheduler            0                   3634fa493c29a       kube-scheduler-minikube
9a78c952097ae       73deb9a3f7025       47 minutes ago      Running             etcd                      0                   7ccbe1b992b73       etcd-minikube
5bf0b9200f560       10baa1ca17068       47 minutes ago      Running             kube-controller-manager   0                   d70a8892afacb       kube-controller-manager-minikube

* 
* ==> coredns [f377dccd5b18] <==
* .:53
[INFO] plugin/reload: Running configuration SHA512 = f869070685748660180df1b7a47d58cdafcf2f368266578c062d1151dc2c900964aecc5975e8882e6de6fdfb6460463e30ebfaad2ec8f0c3c6436f80225b3b5b
CoreDNS-1.10.1
linux/amd64, go1.20, 055b2c3
[INFO] 127.0.0.1:40070 - 21701 "HINFO IN 7543473273615678238.5813037942689205788. udp 57 false 512" NXDOMAIN qr,rd,ra 57 0.162858272s

* 
* ==> describe nodes <==
* Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=8220a6eb95f0a4d75f7f2d7b14cef975f050512d
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2024_04_13T17_14_35_0700
                    minikube.k8s.io/version=v1.32.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Sat, 13 Apr 2024 14:14:31 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Sat, 13 Apr 2024 15:01:39 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Sat, 13 Apr 2024 14:58:08 +0000   Sat, 13 Apr 2024 14:14:30 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Sat, 13 Apr 2024 14:58:08 +0000   Sat, 13 Apr 2024 14:14:30 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Sat, 13 Apr 2024 14:58:08 +0000   Sat, 13 Apr 2024 14:14:30 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Sat, 13 Apr 2024 14:58:08 +0000   Sat, 13 Apr 2024 14:14:45 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                16
  ephemeral-storage:  1055762868Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             16239008Ki
  pods:               110
Allocatable:
  cpu:                16
  ephemeral-storage:  1055762868Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             16239008Ki
  pods:               110
System Info:
  Machine ID:                 be8fbfccb2fe42bd8a8e693a3c882eb8
  System UUID:                be8fbfccb2fe42bd8a8e693a3c882eb8
  Boot ID:                    d9e5fb94-48dc-40f2-a6d2-63c512bc1212
  Kernel Version:             5.15.146.1-microsoft-standard-WSL2
  OS Image:                   Ubuntu 22.04.3 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://24.0.7
  Kubelet Version:            v1.28.3
  Kube-Proxy Version:         v1.28.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (9 in total)
  Namespace                   Name                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                       ------------  ----------  ---------------  -------------  ---
  default                     container-1-deployment-68db844655-hr5sv    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         19m
  default                     container-1-deployment-bd6c8dcb4-tkkf6     0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         16m
  kube-system                 coredns-5dd5756b68-mtprx                   100m (0%!)(MISSING)     0 (0%!)(MISSING)      70Mi (0%!)(MISSING)        170Mi (1%!)(MISSING)     47m
  kube-system                 etcd-minikube                              100m (0%!)(MISSING)     0 (0%!)(MISSING)      100Mi (0%!)(MISSING)       0 (0%!)(MISSING)         47m
  kube-system                 kube-apiserver-minikube                    250m (1%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         47m
  kube-system                 kube-controller-manager-minikube           200m (1%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         47m
  kube-system                 kube-proxy-svcm8                           0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         47m
  kube-system                 kube-scheduler-minikube                    100m (0%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         47m
  kube-system                 storage-provisioner                        0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         47m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (4%!)(MISSING)   0 (0%!)(MISSING)
  memory             170Mi (1%!)(MISSING)  170Mi (1%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age                From             Message
  ----    ------                   ----               ----             -------
  Normal  Starting                 46m                kube-proxy       
  Normal  Starting                 47m                kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  47m (x8 over 47m)  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    47m (x8 over 47m)  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     47m (x7 over 47m)  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeAllocatableEnforced  47m                kubelet          Updated Node Allocatable limit across pods
  Normal  Starting                 47m                kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  47m                kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    47m                kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     47m                kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeNotReady             47m                kubelet          Node minikube status is now: NodeNotReady
  Normal  NodeAllocatableEnforced  47m                kubelet          Updated Node Allocatable limit across pods
  Normal  NodeReady                47m                kubelet          Node minikube status is now: NodeReady
  Normal  RegisteredNode           47m                node-controller  Node minikube event: Registered Node minikube in Controller

* 
* ==> dmesg <==
* [  +0.018014] hv_storvsc fd1d2cbd-ce7c-535c-966b-eb5f811c95f0: tag#1215 cmd 0x2a status: scsi 0x0 srb 0x4 hv 0xc00000a1
[Apr13 13:09] WSL (2) ERROR: UtilCreateProcessAndWait:665: /bin/mount failed with 2
[  +0.000600] WSL (1) ERROR: UtilCreateProcessAndWait:687: /bin/mount failed with status 0xff00

[  +0.000498] WSL (1) ERROR: ConfigMountFsTab:2589: Processing fstab with mount -a failed.
[  +0.000821] WSL (1) ERROR: ConfigApplyWindowsLibPath:2537: open /etc/ld.so.conf.d/ld.wsl.conf
[  +0.000002]  failed 2
[  +0.002127] WSL (3) ERROR: UtilCreateProcessAndWait:665: /bin/mount failed with 2
[  +0.000512] WSL (1) ERROR: UtilCreateProcessAndWait:687: /bin/mount failed with status 0xff00

[  +0.012544] WSL (1) WARNING: /usr/share/zoneinfo/Europe/Bucharest not found. Is the tzdata package installed?
[  +0.117762] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000747] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000522] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000562] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.335635] WSL (1) ERROR: ConfigApplyWindowsLibPath:2537: open /etc/ld.so.conf.d/ld.wsl.conf
[  +0.000028]  failed 2
[  +0.014950] WSL (1) WARNING: /usr/share/zoneinfo/Europe/Bucharest not found. Is the tzdata package installed?
[  +0.077333] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000656] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000480] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000555] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.056888] Buffer I/O error on dev sdc, logical block 134184960, lost sync page write
[  +0.000519] JBD2: Error -5 detected when updating journal superblock for sdc-8.
[  +0.000425] Aborting journal on device sdc-8.
[  +0.000276] Buffer I/O error on dev sdc, logical block 134184960, lost sync page write
[  +0.000363] JBD2: Error -5 detected when updating journal superblock for sdc-8.
[  +0.000363] EXT4-fs error (device sdc): ext4_put_super:1196: comm wsl-bootstrap: Couldn't clean up the journal
[  +0.000465] EXT4-fs (sdc): Remounting filesystem read-only
[ +11.172670] netlink: 'init': attribute type 4 has an invalid length.
[Apr13 13:19] Buffer I/O error on dev sdd, logical block 134184960, lost sync page write
[  +0.000675] JBD2: Error -5 detected when updating journal superblock for sdd-8.
[  +0.000430] Aborting journal on device sdd-8.
[  +0.000213] Buffer I/O error on dev sdd, logical block 134184960, lost sync page write
[  +0.000343] JBD2: Error -5 detected when updating journal superblock for sdd-8.
[  +0.000502] EXT4-fs error (device sdd): ext4_put_super:1196: comm systemd-binfmt: Couldn't clean up the journal
[  +0.000699] EXT4-fs (sdd): Remounting filesystem read-only
[Apr13 14:13] CPU: 0 PID: 1180 Comm: systemd-journal Not tainted 5.15.146.1-microsoft-standard-WSL2 #1
[  +0.000004] RIP: 0033:0x7ffb19435fde
[  +0.000010] Code: 10 89 7c 24 0c 89 4c 24 1c e8 ae aa f6 ff 44 8b 54 24 1c 8b 54 24 18 41 89 c0 48 8b 74 24 10 8b 7c 24 0c b8 e8 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 32 44 89 c7 89 44 24 0c e8 ee aa f6 ff 8b 44
[  +0.000002] RSP: 002b:00007ffc54231990 EFLAGS: 00000293 ORIG_RAX: 00000000000000e8
[  +0.000003] RAX: 0000000000000002 RBX: 00005645e6ec1ce0 RCX: 00007ffb19435fde
[  +0.000001] RDX: 0000000000000042 RSI: 00005645e6ee2b50 RDI: 0000000000000008
[  +0.000002] RBP: 0000000000000023 R08: 0000000000000000 R09: 00000000661a4123
[  +0.000000] R10: 00000000ffffffff R11: 0000000000000293 R12: 0000000000000118
[  +0.000001] R13: 0000000000000042 R14: 000000000000001c R15: 00005645e6ec1e70
[  +0.000002] FS:  00007ffb18a55900 GS:  0000000000000000
[  +0.041557] CPU: 9 PID: 16636 Comm: systemd-udevd Not tainted 5.15.146.1-microsoft-standard-WSL2 #1
[  +0.000004] RIP: 0033:0x7fafd086ff9a
[  +0.000007] Code: 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 41 89 ca 64 8b 04 25 18 00 00 00 85 c0 75 15 b8 e8 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 5e c3 0f 1f 44 00 00 48 83 ec 28 89 54 24 18
[  +0.000002] RSP: 002b:00007ffcd4593bc8 EFLAGS: 00000246 ORIG_RAX: 00000000000000e8
[  +0.000003] RAX: fffffffffffffffc RBX: 0000561d9ae31680 RCX: 00007fafd086ff9a
[  +0.000001] RDX: 0000000000000028 RSI: 0000561d9ae95b00 RDI: 0000000000000009
[  +0.000001] RBP: 7fffffffffffffff R08: 0000561d9ae95b00 R09: 0000000000015b40
[  +0.000001] R10: 00000000ffffffff R11: 0000000000000246 R12: 0000000000000064
[  +0.000001] R13: 0000000000000028 R14: 000000000000000a R15: 0000561d9ae31810
[  +0.000002] FS:  00007fafd01718c0 GS:  0000000000000000
[  +0.710818] systemd-journald[3402]: File /var/log/journal/bbf03e6f3e474b609934277daff8d0ea/system.journal corrupted or uncleanly shut down, renaming and replacing.
[ +19.286227] WSL (1) WARNING: /usr/share/zoneinfo/Europe/Bucharest not found. Is the tzdata package installed?
[  +0.018797] WSL (1) WARNING: /usr/share/zoneinfo/Europe/Bucharest not found. Is the tzdata package installed?

* 
* ==> etcd [9a78c952097a] <==
* {"level":"info","ts":"2024-04-13T14:14:30.139382Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2024-04-13T14:14:30.139449Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2024-04-13T14:14:30.139474Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2024-04-13T14:14:30.139503Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2024-04-13T14:14:30.139507Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-04-13T14:14:30.139515Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2024-04-13T14:14:30.139521Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-04-13T14:14:30.14229Z","caller":"etcdserver/server.go:2571","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2024-04-13T14:14:30.144698Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2024-04-13T14:14:30.182035Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-04-13T14:14:30.182068Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-04-13T14:14:30.182115Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2024-04-13T14:14:30.182152Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2024-04-13T14:14:30.182882Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}
{"level":"info","ts":"2024-04-13T14:14:30.182931Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2024-04-13T14:14:30.184199Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2024-04-13T14:14:30.184274Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2024-04-13T14:14:30.184313Z","caller":"etcdserver/server.go:2595","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2024-04-13T14:14:50.497899Z","caller":"traceutil/trace.go:171","msg":"trace[323381636] transaction","detail":"{read_only:false; response_revision:397; number_of_response:1; }","duration":"101.046976ms","start":"2024-04-13T14:14:50.396824Z","end":"2024-04-13T14:14:50.497871Z","steps":["trace[323381636] 'process raft request'  (duration: 100.953527ms)"],"step_count":1}
{"level":"info","ts":"2024-04-13T14:15:44.329205Z","caller":"traceutil/trace.go:171","msg":"trace[2037407870] transaction","detail":"{read_only:false; response_revision:451; number_of_response:1; }","duration":"154.476253ms","start":"2024-04-13T14:15:44.174666Z","end":"2024-04-13T14:15:44.329142Z","steps":["trace[2037407870] 'process raft request'  (duration: 76.078392ms)","trace[2037407870] 'compare'  (duration: 78.306629ms)"],"step_count":2}
{"level":"info","ts":"2024-04-13T14:16:59.989831Z","caller":"traceutil/trace.go:171","msg":"trace[959551006] transaction","detail":"{read_only:false; response_revision:511; number_of_response:1; }","duration":"191.930629ms","start":"2024-04-13T14:16:59.797888Z","end":"2024-04-13T14:16:59.989818Z","steps":["trace[959551006] 'process raft request'  (duration: 191.819297ms)"],"step_count":1}
{"level":"info","ts":"2024-04-13T14:24:29.655511Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":651}
{"level":"info","ts":"2024-04-13T14:24:29.656277Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":651,"took":"518.587µs","hash":2242780744}
{"level":"info","ts":"2024-04-13T14:24:29.656309Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":2242780744,"revision":651,"compact-revision":-1}
{"level":"info","ts":"2024-04-13T14:29:29.696324Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":968}
{"level":"info","ts":"2024-04-13T14:29:29.697068Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":968,"took":"471.119µs","hash":2962533823}
{"level":"info","ts":"2024-04-13T14:29:29.697105Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":2962533823,"revision":968,"compact-revision":651}
{"level":"info","ts":"2024-04-13T14:34:29.706693Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1273}
{"level":"info","ts":"2024-04-13T14:34:29.707414Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":1273,"took":"438.151µs","hash":1711587815}
{"level":"info","ts":"2024-04-13T14:34:29.707444Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1711587815,"revision":1273,"compact-revision":968}
{"level":"info","ts":"2024-04-13T14:39:29.716945Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1523}
{"level":"info","ts":"2024-04-13T14:39:29.717588Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":1523,"took":"405.879µs","hash":1429501450}
{"level":"info","ts":"2024-04-13T14:39:29.717618Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1429501450,"revision":1523,"compact-revision":1273}
{"level":"info","ts":"2024-04-13T14:39:51.582309Z","caller":"traceutil/trace.go:171","msg":"trace[1536268095] transaction","detail":"{read_only:false; response_revision:1787; number_of_response:1; }","duration":"517.165849ms","start":"2024-04-13T14:39:51.066025Z","end":"2024-04-13T14:39:51.582293Z","steps":["trace[1536268095] 'process raft request'  (duration: 517.001817ms)"],"step_count":1}
{"level":"warn","ts":"2024-04-13T14:39:51.582689Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2024-04-13T14:39:51.066004Z","time spent":"517.282656ms","remote":"127.0.0.1:48374","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":585,"response count":0,"response size":40,"request content":"compare:<target:MOD key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" mod_revision:1786 > success:<request_put:<key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" value_size:512 >> failure:<request_range:<key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" > >"}
{"level":"info","ts":"2024-04-13T14:44:29.721979Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1770}
{"level":"info","ts":"2024-04-13T14:44:29.722563Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":1770,"took":"345.18µs","hash":2118694377}
{"level":"info","ts":"2024-04-13T14:44:29.722597Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":2118694377,"revision":1770,"compact-revision":1523}
{"level":"info","ts":"2024-04-13T14:49:29.731267Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2072}
{"level":"info","ts":"2024-04-13T14:49:29.731931Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":2072,"took":"388.587µs","hash":1497608840}
{"level":"info","ts":"2024-04-13T14:49:29.731968Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1497608840,"revision":2072,"compact-revision":1770}
{"level":"info","ts":"2024-04-13T14:54:29.743432Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2387}
{"level":"info","ts":"2024-04-13T14:54:29.744176Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":2387,"took":"451.086µs","hash":2410282613}
{"level":"info","ts":"2024-04-13T14:54:29.744206Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":2410282613,"revision":2387,"compact-revision":2072}
{"level":"info","ts":"2024-04-13T14:59:29.753232Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2638}
{"level":"info","ts":"2024-04-13T14:59:29.753802Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":2638,"took":"345.427µs","hash":1657775082}
{"level":"info","ts":"2024-04-13T14:59:29.753833Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1657775082,"revision":2638,"compact-revision":2387}
{"level":"warn","ts":"2024-04-13T15:01:21.596384Z","caller":"etcdserver/v3_server.go:897","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":8128028485043657206,"retry-timeout":"500ms"}
{"level":"warn","ts":"2024-04-13T15:01:22.097242Z","caller":"etcdserver/v3_server.go:897","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":8128028485043657206,"retry-timeout":"500ms"}
{"level":"warn","ts":"2024-04-13T15:01:22.529261Z","caller":"wal/wal.go:805","msg":"slow fdatasync","took":"1.474627331s","expected-duration":"1s"}
{"level":"info","ts":"2024-04-13T15:01:22.529695Z","caller":"traceutil/trace.go:171","msg":"trace[1881832840] linearizableReadLoop","detail":"{readStateIndex:3580; appliedIndex:3579; }","duration":"1.433861959s","start":"2024-04-13T15:01:21.096623Z","end":"2024-04-13T15:01:22.529639Z","steps":["trace[1881832840] 'read index received'  (duration: 1.433683601s)","trace[1881832840] 'applied index is now lower than readState.Index'  (duration: 177.91µs)"],"step_count":2}
{"level":"info","ts":"2024-04-13T15:01:22.529751Z","caller":"traceutil/trace.go:171","msg":"trace[1475578335] transaction","detail":"{read_only:false; response_revision:2976; number_of_response:1; }","duration":"1.475187888s","start":"2024-04-13T15:01:21.055398Z","end":"2024-04-13T15:01:22.529739Z","steps":["trace[1475578335] 'process raft request'  (duration: 1.474988494s)"],"step_count":1}
{"level":"warn","ts":"2024-04-13T15:01:22.529843Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2024-04-13T15:01:21.055383Z","time spent":"1.475235013s","remote":"127.0.0.1:48392","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":3056,"response count":0,"response size":40,"request content":"compare:<target:MOD key:\"/registry/pods/default/container-1-deployment-bd6c8dcb4-tkkf6\" mod_revision:2736 > success:<request_put:<key:\"/registry/pods/default/container-1-deployment-bd6c8dcb4-tkkf6\" value_size:2987 >> failure:<request_range:<key:\"/registry/pods/default/container-1-deployment-bd6c8dcb4-tkkf6\" > >"}
{"level":"warn","ts":"2024-04-13T15:01:22.52984Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"1.434092047s","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" ","response":"range_response_count:1 size:601"}
{"level":"warn","ts":"2024-04-13T15:01:22.529842Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"535.760589ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/roles/\" range_end:\"/registry/roles0\" count_only:true ","response":"range_response_count:0 size:7"}
{"level":"info","ts":"2024-04-13T15:01:22.529903Z","caller":"traceutil/trace.go:171","msg":"trace[1602208469] range","detail":"{range_begin:/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath; range_end:; response_count:1; response_revision:2976; }","duration":"1.434147832s","start":"2024-04-13T15:01:21.096582Z","end":"2024-04-13T15:01:22.529884Z","steps":["trace[1602208469] 'agreement among raft nodes before linearized reading'  (duration: 1.434011739s)"],"step_count":1}
{"level":"warn","ts":"2024-04-13T15:01:22.529932Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2024-04-13T15:01:21.096569Z","time spent":"1.434204592s","remote":"127.0.0.1:48374","response type":"/etcdserverpb.KV/Range","request count":0,"request size":67,"response count":1,"response size":625,"request content":"key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" "}
{"level":"info","ts":"2024-04-13T15:01:22.529903Z","caller":"traceutil/trace.go:171","msg":"trace[254730179] range","detail":"{range_begin:/registry/roles/; range_end:/registry/roles0; response_count:0; response_revision:2976; }","duration":"535.82693ms","start":"2024-04-13T15:01:21.994067Z","end":"2024-04-13T15:01:22.529894Z","steps":["trace[254730179] 'agreement among raft nodes before linearized reading'  (duration: 535.68783ms)"],"step_count":1}
{"level":"warn","ts":"2024-04-13T15:01:22.530012Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2024-04-13T15:01:21.994038Z","time spent":"535.961138ms","remote":"127.0.0.1:48526","response type":"/etcdserverpb.KV/Range","request count":0,"request size":38,"response count":12,"response size":31,"request content":"key:\"/registry/roles/\" range_end:\"/registry/roles0\" count_only:true "}
{"level":"info","ts":"2024-04-13T15:01:22.67013Z","caller":"traceutil/trace.go:171","msg":"trace[1236479642] transaction","detail":"{read_only:false; response_revision:2977; number_of_response:1; }","duration":"137.964162ms","start":"2024-04-13T15:01:22.532151Z","end":"2024-04-13T15:01:22.670115Z","steps":["trace[1236479642] 'process raft request'  (duration: 91.797647ms)","trace[1236479642] 'compare'  (duration: 46.080982ms)"],"step_count":2}

* 
* ==> kernel <==
*  15:01:50 up 1 day,  1:29,  0 users,  load average: 0.32, 0.12, 0.10
Linux minikube 5.15.146.1-microsoft-standard-WSL2 #1 SMP Thu Jan 11 04:09:03 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.3 LTS"

* 
* ==> kube-apiserver [78a5d6b8fa5c] <==
* I0413 14:14:31.827589       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0413 14:14:31.827616       1 system_namespaces_controller.go:67] Starting system namespaces controller
I0413 14:14:31.827630       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0413 14:14:31.827632       1 aggregator.go:164] waiting for initial CRD sync...
I0413 14:14:31.828374       1 handler_discovery.go:412] Starting ResourceDiscoveryManager
I0413 14:14:31.828601       1 controller.go:134] Starting OpenAPI controller
I0413 14:14:31.828677       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0413 14:14:31.828889       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I0413 14:14:31.828857       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I0413 14:14:31.829247       1 establishing_controller.go:76] Starting EstablishingController
I0413 14:14:31.829257       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0413 14:14:31.829423       1 crd_finalizer.go:266] Starting CRDFinalizer
I0413 14:14:31.829430       1 controller.go:85] Starting OpenAPI V3 controller
I0413 14:14:31.829616       1 naming_controller.go:291] Starting NamingConditionController
I0413 14:14:31.829440       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0413 14:14:31.834019       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0413 14:14:31.834094       1 shared_informer.go:311] Waiting for caches to sync for cluster_authentication_trust_controller
I0413 14:14:31.834120       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0413 14:14:31.834150       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0413 14:14:31.982551       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0413 14:14:31.982660       1 apf_controller.go:377] Running API Priority and Fairness config worker
I0413 14:14:31.983089       1 apf_controller.go:380] Running API Priority and Fairness periodic rebalancing process
I0413 14:14:31.982922       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0413 14:14:31.983006       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I0413 14:14:31.983329       1 shared_informer.go:318] Caches are synced for crd-autoregister
I0413 14:14:31.983558       1 aggregator.go:166] initial CRD sync complete...
I0413 14:14:31.983569       1 autoregister_controller.go:141] Starting autoregister controller
I0413 14:14:31.983573       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0413 14:14:31.983579       1 cache.go:39] Caches are synced for autoregister controller
I0413 14:14:31.988453       1 controller.go:624] quota admission added evaluator for: namespaces
I0413 14:14:31.991715       1 shared_informer.go:318] Caches are synced for node_authorizer
I0413 14:14:32.082097       1 shared_informer.go:318] Caches are synced for configmaps
I0413 14:14:32.082415       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I0413 14:14:32.833388       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0413 14:14:32.840348       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0413 14:14:32.840368       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0413 14:14:33.890810       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0413 14:14:33.962744       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0413 14:14:34.145475       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0413 14:14:34.171925       1 lease.go:263] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0413 14:14:34.173287       1 controller.go:624] quota admission added evaluator for: endpoints
I0413 14:14:34.180415       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0413 14:14:34.999398       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I0413 14:14:35.521503       1 controller.go:624] quota admission added evaluator for: deployments.apps
I0413 14:14:35.540056       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0413 14:14:35.556432       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I0413 14:14:48.504868       1 controller.go:624] quota admission added evaluator for: controllerrevisions.apps
I0413 14:14:48.705924       1 controller.go:624] quota admission added evaluator for: replicasets.apps
I0413 14:39:51.583093       1 trace.go:236] Trace[757523699]: "Update" accept:application/json, */*,audit-id:b30ff5a3-7e4d-4a48-89e9-9c3fa85b8dcf,client:192.168.49.2,protocol:HTTP/2.0,resource:endpoints,scope:resource,url:/api/v1/namespaces/kube-system/endpoints/k8s.io-minikube-hostpath,user-agent:storage-provisioner/v0.0.0 (linux/amd64) kubernetes/$Format,verb:PUT (13-Apr-2024 14:39:51.065) (total time: 518ms):
Trace[757523699]: ["GuaranteedUpdate etcd3" audit-id:b30ff5a3-7e4d-4a48-89e9-9c3fa85b8dcf,key:/services/endpoints/kube-system/k8s.io-minikube-hostpath,type:*core.Endpoints,resource:endpoints 518ms (14:39:51.065)
Trace[757523699]:  ---"Txn call completed" 518ms (14:39:51.582)]
Trace[757523699]: [518.700216ms] [518.700216ms] END
I0413 15:01:22.530260       1 trace.go:236] Trace[1481952796]: "Patch" accept:application/vnd.kubernetes.protobuf,application/json,audit-id:cd7874ad-ac28-4203-967f-6ab58a02320c,client:192.168.49.2,protocol:HTTP/2.0,resource:pods,scope:resource,url:/api/v1/namespaces/default/pods/container-1-deployment-bd6c8dcb4-tkkf6/status,user-agent:kubelet/v1.28.3 (linux/amd64) kubernetes/a8a1abc,verb:PATCH (13-Apr-2024 15:01:21.053) (total time: 1477ms):
Trace[1481952796]: ["GuaranteedUpdate etcd3" audit-id:cd7874ad-ac28-4203-967f-6ab58a02320c,key:/pods/default/container-1-deployment-bd6c8dcb4-tkkf6,type:*core.Pod,resource:pods 1477ms (15:01:21.053)
Trace[1481952796]:  ---"Txn call completed" 1475ms (15:01:22.530)]
Trace[1481952796]: ---"Object stored in database" 1476ms (15:01:22.530)
Trace[1481952796]: [1.477634091s] [1.477634091s] END
I0413 15:01:22.530318       1 trace.go:236] Trace[429368321]: "Get" accept:application/json, */*,audit-id:f6df6519-650b-4ce9-a7fe-3f43665dff47,client:192.168.49.2,protocol:HTTP/2.0,resource:endpoints,scope:resource,url:/api/v1/namespaces/kube-system/endpoints/k8s.io-minikube-hostpath,user-agent:storage-provisioner/v0.0.0 (linux/amd64) kubernetes/$Format,verb:GET (13-Apr-2024 15:01:21.096) (total time: 1434ms):
Trace[429368321]: ---"About to write a response" 1434ms (15:01:22.530)
Trace[429368321]: [1.434967991s] [1.434967991s] END

* 
* ==> kube-controller-manager [5bf0b9200f56] <==
* I0413 14:42:47.203322       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="40.806µs"
I0413 14:42:47.212449       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="22.053µs"
I0413 14:42:47.432937       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-764b8f648f" duration="61.78µs"
I0413 14:42:47.706023       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-764b8f648f" duration="77.91µs"
I0413 14:42:47.716021       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-764b8f648f" duration="51.448µs"
I0413 14:42:47.723796       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-764b8f648f" duration="59.786µs"
I0413 14:42:47.729556       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-764b8f648f" duration="49.764µs"
I0413 14:42:50.824480       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="64.693µs"
I0413 14:43:03.079464       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="36.381µs"
I0413 14:43:19.076283       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="43.541µs"
I0413 14:43:31.075193       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="53.655µs"
I0413 14:43:45.074908       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="52.446µs"
I0413 14:43:58.072150       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="36.914µs"
I0413 14:44:17.069541       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-745985d667" duration="53.263µs"
I0413 14:44:32.069860       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-745985d667" duration="57.875µs"
I0413 14:44:43.074965       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="41.624µs"
I0413 14:44:54.073855       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="86.444µs"
I0413 14:45:06.209300       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="7.272821ms"
I0413 14:45:06.209384       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="43.535µs"
I0413 14:45:06.214061       1 event.go:307] "Event occurred" object="default/container-1-deployment" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled down replica set container-1-deployment-745985d667 to 0 from 1"
I0413 14:45:06.222314       1 event.go:307] "Event occurred" object="default/container-1-deployment-745985d667" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulDelete" message="Deleted pod: container-1-deployment-745985d667-qglvw"
I0413 14:45:06.234343       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-745985d667" duration="20.71721ms"
I0413 14:45:06.234524       1 event.go:307] "Event occurred" object="default/container-1-deployment" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set container-1-deployment-bd6c8dcb4 to 1 from 0"
I0413 14:45:06.244002       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-745985d667" duration="9.610392ms"
I0413 14:45:06.244062       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-745985d667" duration="29.65µs"
I0413 14:45:06.251499       1 event.go:307] "Event occurred" object="default/container-1-deployment-bd6c8dcb4" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: container-1-deployment-bd6c8dcb4-tkkf6"
I0413 14:45:06.262911       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="28.545928ms"
I0413 14:45:06.269376       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="6.422168ms"
I0413 14:45:06.269462       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="37.826µs"
I0413 14:45:06.274327       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="37.307µs"
I0413 14:45:06.425196       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-745985d667" duration="41.371µs"
I0413 14:45:07.403334       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-745985d667" duration="45.177µs"
I0413 14:45:07.410284       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-745985d667" duration="56.979µs"
I0413 14:45:07.417863       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-745985d667" duration="38.867µs"
I0413 14:45:07.423874       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-745985d667" duration="32.659µs"
I0413 14:45:09.417001       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="38.576µs"
I0413 14:45:21.075861       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="46.548µs"
I0413 14:45:34.069764       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="43.446µs"
I0413 14:45:48.072143       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="66.964µs"
I0413 14:46:05.069769       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="60.26µs"
I0413 14:46:06.068216       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="40.856µs"
I0413 14:46:18.071376       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="61.203µs"
I0413 14:46:20.066457       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="61.084µs"
I0413 14:46:58.069776       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="151.761µs"
I0413 14:47:10.070072       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="70.175µs"
I0413 14:48:29.066086       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="70.037µs"
I0413 14:48:43.066740       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="68.795µs"
I0413 14:48:58.067093       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="61.409µs"
I0413 14:49:10.066499       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="95.079µs"
I0413 14:51:13.067768       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="92.021µs"
I0413 14:51:24.066168       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="81.718µs"
I0413 14:53:33.621790       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="58.361µs"
I0413 14:53:59.068751       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="81.102µs"
I0413 14:54:11.065101       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="61.207µs"
I0413 14:56:12.066352       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="66.27µs"
I0413 14:56:26.064352       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="74.289µs"
I0413 14:59:14.066507       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="70.277µs"
I0413 14:59:26.061700       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-68db844655" duration="80.755µs"
I0413 15:01:22.530898       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="79.206µs"
I0413 15:01:32.064721       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/container-1-deployment-bd6c8dcb4" duration="82.049µs"

* 
* ==> kube-proxy [32ceb2b39f79] <==
* I0413 14:14:49.991778       1 server_others.go:69] "Using iptables proxy"
I0413 14:14:49.998365       1 node.go:141] Successfully retrieved node IP: 192.168.49.2
I0413 14:14:50.042431       1 server.go:632] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0413 14:14:50.043923       1 server_others.go:152] "Using iptables Proxier"
I0413 14:14:50.043963       1 server_others.go:421] "Detect-local-mode set to ClusterCIDR, but no cluster CIDR for family" ipFamily="IPv6"
I0413 14:14:50.043970       1 server_others.go:438] "Defaulting to no-op detect-local"
I0413 14:14:50.043991       1 proxier.go:251] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0413 14:14:50.044292       1 server.go:846] "Version info" version="v1.28.3"
I0413 14:14:50.044325       1 server.go:848] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0413 14:14:50.045015       1 config.go:315] "Starting node config controller"
I0413 14:14:50.045027       1 config.go:97] "Starting endpoint slice config controller"
I0413 14:14:50.045048       1 shared_informer.go:311] Waiting for caches to sync for node config
I0413 14:14:50.045048       1 config.go:188] "Starting service config controller"
I0413 14:14:50.045053       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0413 14:14:50.045061       1 shared_informer.go:311] Waiting for caches to sync for service config
I0413 14:14:50.145538       1 shared_informer.go:318] Caches are synced for service config
I0413 14:14:50.145634       1 shared_informer.go:318] Caches are synced for endpoint slice config
I0413 14:14:50.145642       1 shared_informer.go:318] Caches are synced for node config

* 
* ==> kube-scheduler [05261cd271c3] <==
* I0413 14:14:31.993538       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0413 14:14:31.994957       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0413 14:14:31.995069       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0413 14:14:31.995094       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0413 14:14:31.995134       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0413 14:14:31.995143       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0413 14:14:31.995185       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0413 14:14:31.995186       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0413 14:14:31.995179       1 reflector.go:535] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0413 14:14:31.995094       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0413 14:14:31.995205       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0413 14:14:31.995215       1 reflector.go:147] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0413 14:14:31.995207       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0413 14:14:31.995227       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0413 14:14:31.995245       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0413 14:14:31.995252       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0413 14:14:31.995259       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0413 14:14:31.995277       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0413 14:14:31.995284       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0413 14:14:31.995286       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0413 14:14:31.995300       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0413 14:14:31.995319       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0413 14:14:31.995293       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0413 14:14:31.995334       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0413 14:14:31.995339       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0413 14:14:31.995144       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0413 14:14:31.995355       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0413 14:14:31.995356       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0413 14:14:31.995256       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0413 14:14:31.995525       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0413 14:14:31.995540       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0413 14:14:32.866330       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0413 14:14:32.866364       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0413 14:14:32.901117       1 reflector.go:535] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0413 14:14:32.901163       1 reflector.go:147] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0413 14:14:32.944071       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0413 14:14:32.944108       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0413 14:14:33.067991       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0413 14:14:33.068024       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0413 14:14:33.096311       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0413 14:14:33.096357       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0413 14:14:33.116265       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0413 14:14:33.116300       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0413 14:14:33.142689       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0413 14:14:33.142739       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0413 14:14:33.152490       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0413 14:14:33.152538       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0413 14:14:33.171932       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0413 14:14:33.171972       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0413 14:14:33.342837       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0413 14:14:33.342895       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0413 14:14:33.394329       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0413 14:14:33.394374       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0413 14:14:33.419454       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0413 14:14:33.419493       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0413 14:14:33.576348       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0413 14:14:33.576386       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0413 14:14:33.586672       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0413 14:14:33.586715       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
I0413 14:14:35.993561       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file

* 
* ==> kubelet <==
* Apr 13 14:56:12 minikube kubelet[4448]: E0413 14:56:12.056248    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:56:23 minikube kubelet[4448]: E0413 14:56:23.055448    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:56:26 minikube kubelet[4448]: E0413 14:56:26.055205    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:56:35 minikube kubelet[4448]: E0413 14:56:35.055078    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:56:39 minikube kubelet[4448]: E0413 14:56:39.056188    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:56:47 minikube kubelet[4448]: E0413 14:56:47.055572    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:56:51 minikube kubelet[4448]: E0413 14:56:51.054895    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:57:01 minikube kubelet[4448]: E0413 14:57:01.055615    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:57:03 minikube kubelet[4448]: E0413 14:57:03.055685    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:57:14 minikube kubelet[4448]: E0413 14:57:14.055017    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:57:16 minikube kubelet[4448]: E0413 14:57:16.054921    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:57:27 minikube kubelet[4448]: E0413 14:57:27.054942    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:57:29 minikube kubelet[4448]: E0413 14:57:29.054916    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:57:38 minikube kubelet[4448]: E0413 14:57:38.053825    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:57:43 minikube kubelet[4448]: E0413 14:57:43.054783    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:57:52 minikube kubelet[4448]: E0413 14:57:52.053968    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:57:55 minikube kubelet[4448]: E0413 14:57:55.055169    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:58:03 minikube kubelet[4448]: E0413 14:58:03.054382    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:58:06 minikube kubelet[4448]: E0413 14:58:06.054398    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:58:17 minikube kubelet[4448]: E0413 14:58:17.054892    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:58:18 minikube kubelet[4448]: E0413 14:58:18.053804    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:58:29 minikube kubelet[4448]: E0413 14:58:29.053857    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:58:30 minikube kubelet[4448]: E0413 14:58:30.053478    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:58:41 minikube kubelet[4448]: E0413 14:58:41.053345    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:58:44 minikube kubelet[4448]: E0413 14:58:44.053374    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:58:53 minikube kubelet[4448]: E0413 14:58:53.052831    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:58:59 minikube kubelet[4448]: E0413 14:58:59.011619    4448 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for first-spring-container, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="docker.io/library/first-spring-container:latest"
Apr 13 14:58:59 minikube kubelet[4448]: E0413 14:58:59.011666    4448 kuberuntime_image.go:53] "Failed to pull image" err="Error response from daemon: pull access denied for first-spring-container, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="docker.io/library/first-spring-container:latest"
Apr 13 14:58:59 minikube kubelet[4448]: E0413 14:58:59.011774    4448 kuberuntime_manager.go:1256] container &Container{Name:first-spring-container,Image:docker.io/library/first-spring-container:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8080,Protocol:TCP,HostIP:,},},Env:[]EnvVar{EnvVar{Name:CONTAINER_NUMBER,Value:1,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tjd2s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod container-1-deployment-68db844655-hr5sv_default(a9799901-3b9f-469b-9781-85444051c19b): ErrImagePull: Error response from daemon: pull access denied for first-spring-container, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Apr 13 14:58:59 minikube kubelet[4448]: E0413 14:58:59.011819    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ErrImagePull: \"Error response from daemon: pull access denied for first-spring-container, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:59:04 minikube kubelet[4448]: E0413 14:59:04.052444    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:59:14 minikube kubelet[4448]: E0413 14:59:14.053806    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:59:18 minikube kubelet[4448]: E0413 14:59:18.053771    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:59:26 minikube kubelet[4448]: E0413 14:59:26.053371    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:59:29 minikube kubelet[4448]: E0413 14:59:29.053509    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:59:35 minikube kubelet[4448]: W0413 14:59:35.237785    4448 sysinfo.go:203] Nodes topology is not available, providing CPU topology
Apr 13 14:59:41 minikube kubelet[4448]: E0413 14:59:41.052866    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:59:41 minikube kubelet[4448]: E0413 14:59:41.052918    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 14:59:56 minikube kubelet[4448]: E0413 14:59:56.052695    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 14:59:56 minikube kubelet[4448]: E0413 14:59:56.052742    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 15:00:09 minikube kubelet[4448]: E0413 15:00:09.052085    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 15:00:10 minikube kubelet[4448]: E0413 15:00:10.051686    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 15:00:21 minikube kubelet[4448]: E0413 15:00:21.052027    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 15:00:25 minikube kubelet[4448]: E0413 15:00:25.051642    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 15:00:33 minikube kubelet[4448]: E0413 15:00:33.051977    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 15:00:40 minikube kubelet[4448]: E0413 15:00:40.052646    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 15:00:46 minikube kubelet[4448]: E0413 15:00:46.051892    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 15:00:52 minikube kubelet[4448]: E0413 15:00:52.051264    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 15:00:58 minikube kubelet[4448]: E0413 15:00:58.052381    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 15:01:06 minikube kubelet[4448]: E0413 15:01:06.988402    4448 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for first-spring-container, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="first-spring-container:latest"
Apr 13 15:01:06 minikube kubelet[4448]: E0413 15:01:06.988463    4448 kuberuntime_image.go:53] "Failed to pull image" err="Error response from daemon: pull access denied for first-spring-container, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="first-spring-container:latest"
Apr 13 15:01:06 minikube kubelet[4448]: E0413 15:01:06.988562    4448 kuberuntime_manager.go:1256] container &Container{Name:first-spring-container,Image:first-spring-container:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8080,Protocol:TCP,HostIP:,},},Env:[]EnvVar{EnvVar{Name:CONTAINER_NUMBER,Value:1,ValueFrom:nil,},},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z7gx4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod container-1-deployment-bd6c8dcb4-tkkf6_default(f73d8be4-cbb4-4a91-8096-915885fac00c): ErrImagePull: Error response from daemon: pull access denied for first-spring-container, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Apr 13 15:01:06 minikube kubelet[4448]: E0413 15:01:06.988592    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ErrImagePull: \"Error response from daemon: pull access denied for first-spring-container, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 15:01:10 minikube kubelet[4448]: E0413 15:01:10.052154    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 15:01:21 minikube kubelet[4448]: E0413 15:01:21.051755    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 15:01:21 minikube kubelet[4448]: E0413 15:01:21.051804    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 15:01:32 minikube kubelet[4448]: E0413 15:01:32.051696    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 15:01:36 minikube kubelet[4448]: E0413 15:01:36.050581    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"
Apr 13 15:01:46 minikube kubelet[4448]: E0413 15:01:46.050392    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"first-spring-container:latest\\\"\"" pod="default/container-1-deployment-bd6c8dcb4-tkkf6" podUID="f73d8be4-cbb4-4a91-8096-915885fac00c"
Apr 13 15:01:47 minikube kubelet[4448]: E0413 15:01:47.050057    4448 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"first-spring-container\" with ImagePullBackOff: \"Back-off pulling image \\\"docker.io/library/first-spring-container:latest\\\"\"" pod="default/container-1-deployment-68db844655-hr5sv" podUID="a9799901-3b9f-469b-9781-85444051c19b"

* 
* ==> storage-provisioner [c0411f1f7f7d] <==
* I0413 14:15:01.074031       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0413 14:15:01.081669       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0413 14:15:01.081712       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0413 14:15:01.095469       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0413 14:15:01.095619       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"2d991010-ed1a-43f0-a99e-ffcce15268c8", APIVersion:"v1", ResourceVersion:"414", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_4f5b08e8-5ef7-440c-983c-acb87f1208d5 became leader
I0413 14:15:01.095660       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_4f5b08e8-5ef7-440c-983c-acb87f1208d5!
I0413 14:15:01.196654       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_4f5b08e8-5ef7-440c-983c-acb87f1208d5!

* 
* ==> storage-provisioner [cc93072271ce] <==
* I0413 14:14:49.912531       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0413 14:14:59.915402       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": net/http: TLS handshake timeout

